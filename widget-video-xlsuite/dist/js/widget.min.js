function loadVideoLinkFromXLSuite(e,t,n){var i="818f22de-40a2-4fa0-a28e-c4d3fa64d331";console.log("displayKey param",e),$.ajax({url:"https://socialweedia.com/admin/api/liquids/call?api_key="+i+"&tag=load_screen&display_key="+e}).then(function(e){if(!e||!e.screen)return console.log("Error - Returned data is empty",e),n&&n(),void 0;var i=e.screen.channel_url,o=i.substring(i.indexOf("?list=")+6);console.log("Loaded channel URL, channel ID",i,o),t(o)})}if("undefined"==typeof config){var config={SKIN:"skin/RVSkin.xml",STORAGE_ENV:"prod"};"undefined"!=typeof angular&&angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","locales/translation_").constant("LOCALES_SUFIX",".json")}var tag=document.createElement("script");tag.src="https://www.youtube.com/iframe_api";var firstScriptTag=document.getElementsByTagName("script")[0];firstScriptTag.parentNode.insertBefore(tag,firstScriptTag);var RiseVision=RiseVision||{};RiseVision.Video={},RiseVision.Video=function(e){"use strict";function t(){e.rpc.call("","rsevent_ready",null,R.getString("id"),!0,!0,!0,!0,!0)}function n(){}function i(){}function o(){}function r(){}function s(){}function a(){}function l(){}function c(){clearTimeout(C),C=setInterval(function(){console.log("Interval check"),loadVideoLinkFromXLSuite(V,function(e){e!=S&&(S=e,m(S,v.width,v.height))})},w)}function d(t,n){console.log("additional params values",n),Array.isArray(t)&&t.length>0&&"additionalParams"===t[0]&&Array.isArray(n)&&n.length>0&&(v=JSON.parse(n[0]),R=new e.Prefs,v||(v={},console.log("additional params recreated")),document.getElementById("videoContainer").style.height=R.getInt("rsH")+"px",v.width=R.getInt("rsW"),v.height=R.getInt("rsH"),R.getString("displayId")?(V=R.getString("displayId"),console.log("displayId set from gadget param",V)):(V=v.displayId,console.log("displayId set from default settings",V)),loadVideoLinkFromXLSuite(V,u,function(){V!=R.getString("displayId")&&(V=v.displayId,console.log("Trying to use default displayId",V),loadVideoLinkFromXLSuite(V,u))}))}function u(e){S=e,m(S,v.width,v.height),c(),t()}function m(e,t,n){console.log("Video url, w, h",e,t,n),_=new YT.Player("mainIframe",{width:t,height:n,playerVars:{listType:"playlist",list:e,autoplay:1,controls:0,loop:1,showinfo:0},events:{onError:g,onReady:p,onStateChange:f}})}function g(e){console.log("Player error code",e),_&&null!=_&&e&&e.data>=100&&(_.nextVideo(),console.log("Error, playing next video",e))}function f(){}function p(){}function y(e){console.debug("video-folder::playerError()",e),a()}function h(){r()}var v,V,R=null,S="",w=5e3,C=null,_=null;return{noStorageFile:n,onStorageInit:i,onStorageRefresh:o,pause:r,play:s,setAdditionalParams:d,playerEnded:a,playerReady:l,playerError:y,stop:h}}(gadgets);var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Video=RiseVision.Common.Video||{},RiseVision.Common.Video.FrameController=function(){"use strict";function e(e){return document.getElementById(l+e)}function t(t){var n,i=e(t);return n=i.querySelector("iframe"),n?n.contentWindow?n.contentWindow:n.contentDocument.document?n.contentDocument.document:n.contentDocument:null}function n(n){var i,o=e(n),r=t(n);r&&(i=o.querySelector("iframe"),r.remove(),i.setAttribute("src","about:blank"))}function i(t){var n=e(t),i=document.createElement("iframe");i.setAttribute("allowTransparency",!0),i.setAttribute("frameborder","0"),i.setAttribute("scrolling","no"),n.appendChild(i)}function o(n,i,o,r,s){var a,l=e(n),c=t(n);c&&(a=l.querySelector("iframe"),a.onload=function(){a.onload=null,c.init(i,o,r),c.load()},a.setAttribute("src",s))}function r(t){var n=e(t);n.style.visibility="hidden"}function s(e,t){var i=document.getElementById(l+e);n(e),setTimeout(function(){for(;i.firstChild;)i.removeChild(i.firstChild);t&&"function"==typeof t&&t()},200)}function a(t){var n=e(t);n.style.visibility="visible"}var l="if_";return{add:i,createFramePlayer:o,getFrameContainer:e,getFrameObject:t,hide:r,remove:s,show:a}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Message=function(e,t){"use strict";function n(){try{t.style.height=e.style.height}catch(n){console.warn("Can't initialize Message - ",n.message)}}function i(){if(r){for(;t.firstChild;)t.removeChild(t.firstChild);t.style.display="none",e.style.visibility="visible",r=!1}}function o(n){var i,o=document.createDocumentFragment();r?(i=t.querySelector(".message"),i.innerHTML=n):(e.style.visibility="hidden",t.style.display="block",i=document.createElement("p"),i.innerHTML=n,i.setAttribute("class","message"),i.style.lineHeight=t.style.height,o.appendChild(i),t.appendChild(o),r=!0)}var r=!1;return n(),{hide:i,show:o}},function(e,t){"use strict";function n(){RiseVision.Video.play()}function i(){RiseVision.Video.pause()}function o(){RiseVision.Video.stop()}function r(){e.removeEventListener("WebComponentsReady",r),console.log("Registering gadget with id",a),a&&""!==a&&(t.rpc.register("rscmd_play_"+a,n),t.rpc.register("rscmd_pause_"+a,i),t.rpc.register("rscmd_stop_"+a,o),t.rpc.register("rsparam_set_"+a,RiseVision.Video.setAdditionalParams),t.rpc.call("","rsparam_get",null,a,["additionalParams"]))}var s=new t.Prefs,a=s.getString("id");e.oncontextmenu=function(){return!1},e.addEventListener("WebComponentsReady",r)}(window,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-2"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}();
//# sourceMappingURL=data:application/json;base64,
