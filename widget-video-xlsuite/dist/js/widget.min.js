function loadVideoLinkFromXLSuite(e){var t="2ae45fc2-72b9-45ce-9771-caf0fabf9c97",i="12345";$.ajax({url:"https://rn.xlsuite.com/admin/api/liquids/call?api_key="+t+"&tag=load_screen&display_key="+i}).then(function(t){var i=t.screen.channel_url;console.log("Loaded channel URL",i);var n=i+"&amp;autoplay=1&amp;controls=0&amp;showinfo=0 frameborder=0";e(n)})}if("undefined"==typeof config){var config={SKIN:"skin/RVSkin.xml",STORAGE_ENV:"prod"};"undefined"!=typeof angular&&angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","locales/translation_").constant("LOCALES_SUFIX",".json")}var RiseVision=RiseVision||{};RiseVision.Video={},RiseVision.Video=function(e){"use strict";function t(){clearTimeout(I),I=null}function i(){e.rpc.call("","rsevent_done",null,y.getString("id"))}function n(){e.rpc.call("","rsevent_ready",null,y.getString("id"),!0,!0,!0,!0,!0)}function o(e){E=setInterval(function(){w=v.url+S+"cb="+(new Date).getTime(),R=!1},e)}function r(){t(),I=setTimeout(function(){i()},5e3)}function s(){F=!0,w="",h.show("The selected video does not exist."),V.remove(_,function(){C||r()})}function a(e){w=e,h.hide(),C||d()}function l(e){w=e,R=!1}function c(){var e=V.getFrameObject(_);return C=!0,F?(t(),void 0):(e&&e.pause(),void 0)}function d(){console.log("Play event ");var e=V.getFrameObject(_);return C=!1,F?(r(),void 0):(R?i():e?e.play():w&&""!==w&&(V.add(0),V.createFramePlayer(0,v,w,config.SKIN,"player.html")),void 0)}function u(){V.remove(_,function(){i()})}function m(){var e;b||null!==E||o(A),C||(e=V.getFrameObject(_),e.play())}function f(t,i){var o;Array.isArray(t)&&t.length>0&&"additionalParams"===t[0]&&Array.isArray(i)&&i.length>0&&(v=JSON.parse(i[0]),y=new e.Prefs,document.getElementById("videoContainer").style.height=y.getInt("rsH")+"px",v.width=y.getInt("rsW"),v.height=y.getInt("rsH"),V=new RiseVision.Common.Video.FrameController,b=!1,o=v.url.split("?"),S=1===o.length?"?":"&",w=v.url,loadVideoLinkFromXLSuite(function(e){w=e;var t=$("#mainIframe");t.attr("src",w),t.attr("width",v.width),t.attr("height",v.height),n()}))}function g(e){console.debug("video-folder::playerError()",e),R=!0,u()}function p(){c()}var v,y=null,h=null,V=null,R=!1,b=!1,C=!0,_=0,S="",w="",A=9e5,E=null,I=null,F=!1;return{noStorageFile:s,onStorageInit:a,onStorageRefresh:l,pause:c,play:d,setAdditionalParams:f,playerEnded:u,playerReady:m,playerError:g,stop:p}}(gadgets);var RiseVision=RiseVision||{};RiseVision.Video=RiseVision.Video||{},RiseVision.Video.Storage=function(e){"use strict";function t(){var t=document.getElementById("videoStorage");t&&(t.addEventListener("rise-storage-response",function(e){e.detail&&e.detail.url&&(i?(i=!1,RiseVision.Video.onStorageInit(e.detail.url)):e.detail.hasOwnProperty("changed")&&e.detail.changed&&RiseVision.Video.onStorageRefresh(e.detail.url))}),t.addEventListener("rise-storage-no-file",function(){RiseVision.Video.noStorageFile()}),t.setAttribute("folder",e.storage.folder),t.setAttribute("fileName",e.storage.fileName),t.setAttribute("companyId",e.storage.companyId),t.setAttribute("env",config.STORAGE_ENV),t.go())}var i=!0;return{init:t}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Video=RiseVision.Common.Video||{},RiseVision.Common.Video.FrameController=function(){"use strict";function e(e){return document.getElementById(l+e)}function t(t){var i,n=e(t);return i=n.querySelector("iframe"),i?i.contentWindow?i.contentWindow:i.contentDocument.document?i.contentDocument.document:i.contentDocument:null}function i(i){var n,o=e(i),r=t(i);r&&(n=o.querySelector("iframe"),r.remove(),n.setAttribute("src","about:blank"))}function n(t){var i=e(t),n=document.createElement("iframe");n.setAttribute("allowTransparency",!0),n.setAttribute("frameborder","0"),n.setAttribute("scrolling","no"),i.appendChild(n)}function o(i,n,o,r,s){var a,l=e(i),c=t(i);c&&(a=l.querySelector("iframe"),a.onload=function(){a.onload=null,c.init(n,o,r),c.load()},a.setAttribute("src",s))}function r(t){var i=e(t);i.style.visibility="hidden"}function s(e,t){var n=document.getElementById(l+e);i(e),setTimeout(function(){for(;n.firstChild;)n.removeChild(n.firstChild);t&&"function"==typeof t&&t()},200)}function a(t){var i=e(t);i.style.visibility="visible"}var l="if_";return{add:n,createFramePlayer:o,getFrameContainer:e,getFrameObject:t,hide:r,remove:s,show:a}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Message=function(e,t){"use strict";function i(){try{t.style.height=e.style.height}catch(i){console.warn("Can't initialize Message - ",i.message)}}function n(){if(r){for(;t.firstChild;)t.removeChild(t.firstChild);t.style.display="none",e.style.visibility="visible",r=!1}}function o(i){var n,o=document.createDocumentFragment();r?(n=t.querySelector(".message"),n.innerHTML=i):(e.style.visibility="hidden",t.style.display="block",n=document.createElement("p"),n.innerHTML=i,n.setAttribute("class","message"),n.style.lineHeight=t.style.height,o.appendChild(n),t.appendChild(o),r=!0)}var r=!1;return i(),{hide:n,show:o}},function(e,t){"use strict";function i(){RiseVision.Video.play()}function n(){RiseVision.Video.pause()}function o(){RiseVision.Video.stop()}function r(){e.removeEventListener("WebComponentsReady",r),a&&""!==a&&(t.rpc.register("rscmd_play_"+a,i),t.rpc.register("rscmd_pause_"+a,n),t.rpc.register("rscmd_stop_"+a,o),t.rpc.register("rsparam_set_"+a,RiseVision.Video.setAdditionalParams),t.rpc.call("","rsparam_get",null,a,["additionalParams"]))}var s=new t.Prefs,a=s.getString("id");e.oncontextmenu=function(){return!1},e.addEventListener("WebComponentsReady",r)}(window,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-2"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}();
//# sourceMappingURL=data:application/json;base64,
