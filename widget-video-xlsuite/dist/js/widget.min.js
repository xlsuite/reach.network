function loadVideoLinkFromXLSuite(e){var i="2ae45fc2-72b9-45ce-9771-caf0fabf9c97",n="12345";$.ajax({url:"https://rn.xlsuite.com/admin/api/liquids/call?api_key="+i+"&tag=load_screen&display_key="+n}).then(function(i){var n=i.screen.channel_url;console.log("Loaded channel URL",n),n=n.substring(n.indexOf("list=")+5),console.log("Trying to play",n),e(n)})}if("undefined"==typeof config){var config={SKIN:"skin/RVSkin.xml",STORAGE_ENV:"prod"};"undefined"!=typeof angular&&angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","locales/translation_").constant("LOCALES_SUFIX",".json")}var RiseVision=RiseVision||{};RiseVision.Video={},RiseVision.Video=function(e){"use strict";function i(){clearTimeout(F),F=null}function n(){e.rpc.call("","rsevent_done",null,v.getString("id"))}function t(){e.rpc.call("","rsevent_ready",null,v.getString("id"),!0,!0,!0,!0,!0)}function o(e){w=setInterval(function(){A=y.url+S+"cb="+(new Date).getTime(),R=!1},e)}function r(){i(),F=setTimeout(function(){n()},5e3)}function s(){I=!0,A="",V.show("The selected video does not exist."),h.remove(_,function(){C||r()})}function a(e){A=e,V.hide(),C||u()}function l(e){A=e,R=!1}function c(){var e=h.getFrameObject(_);return C=!0,I?(i(),void 0):(e&&e.pause(),void 0)}function u(){var e=h.getFrameObject(_);return C=!1,I?(r(),void 0):(R?n():e?e.play():A&&""!==A&&(h.add(0),h.createFramePlayer(0,y,A,config.SKIN,"player.html")),void 0)}function d(){h.remove(_,function(){n()})}function m(){var e;b||null!==w||o(E),C||(e=h.getFrameObject(_),e.play())}function f(i,n){var o;Array.isArray(i)&&i.length>0&&"additionalParams"===i[0]&&Array.isArray(n)&&n.length>0&&(y=JSON.parse(n[0]),v=new e.Prefs,document.getElementById("videoContainer").style.height=v.getInt("rsH")+"px",y.width=v.getInt("rsW"),y.height=v.getInt("rsH"),h=new RiseVision.Common.Video.FrameController,b=!1,o=y.url.split("?"),S=1===o.length?"?":"&",A=y.url,loadVideoLinkFromXLSuite(function(e){A=e,t()}))}function g(e){console.debug("video-folder::playerError()",e),R=!0,d()}function p(){c()}var y,v=null,V=null,h=null,R=!1,b=!1,C=!0,_=0,S="",A="",E=9e5,w=null,F=null,I=!1;return{noStorageFile:s,onStorageInit:a,onStorageRefresh:l,pause:c,play:u,setAdditionalParams:f,playerEnded:d,playerReady:m,playerError:g,stop:p}}(gadgets);var RiseVision=RiseVision||{};RiseVision.Video=RiseVision.Video||{},RiseVision.Video.Storage=function(e){"use strict";function i(){var i=document.getElementById("videoStorage");i&&(i.addEventListener("rise-storage-response",function(e){e.detail&&e.detail.url&&(n?(n=!1,RiseVision.Video.onStorageInit(e.detail.url)):e.detail.hasOwnProperty("changed")&&e.detail.changed&&RiseVision.Video.onStorageRefresh(e.detail.url))}),i.addEventListener("rise-storage-no-file",function(){RiseVision.Video.noStorageFile()}),i.setAttribute("folder",e.storage.folder),i.setAttribute("fileName",e.storage.fileName),i.setAttribute("companyId",e.storage.companyId),i.setAttribute("env",config.STORAGE_ENV),i.go())}var n=!0;return{init:i}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Video=RiseVision.Common.Video||{},RiseVision.Common.Video.FrameController=function(){"use strict";function e(e){return document.getElementById(l+e)}function i(i){var n,t=e(i);return n=t.querySelector("iframe"),n?n.contentWindow?n.contentWindow:n.contentDocument.document?n.contentDocument.document:n.contentDocument:null}function n(n){var t,o=e(n),r=i(n);r&&(t=o.querySelector("iframe"),r.remove(),t.setAttribute("src","about:blank"))}function t(i){var n=e(i),t=document.createElement("iframe");t.setAttribute("allowTransparency",!0),t.setAttribute("frameborder","0"),t.setAttribute("scrolling","no"),n.appendChild(t)}function o(n,t,o,r,s){var a,l=e(n),c=i(n);c&&(a=l.querySelector("iframe"),a.onload=function(){a.onload=null,c.init(t,o,r),c.load()},a.setAttribute("src",s))}function r(i){var n=e(i);n.style.visibility="hidden"}function s(e,i){var t=document.getElementById(l+e);n(e),setTimeout(function(){for(;t.firstChild;)t.removeChild(t.firstChild);i&&"function"==typeof i&&i()},200)}function a(i){var n=e(i);n.style.visibility="visible"}var l="if_";return{add:t,createFramePlayer:o,getFrameContainer:e,getFrameObject:i,hide:r,remove:s,show:a}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Message=function(e,i){"use strict";function n(){try{i.style.height=e.style.height}catch(n){console.warn("Can't initialize Message - ",n.message)}}function t(){if(r){for(;i.firstChild;)i.removeChild(i.firstChild);i.style.display="none",e.style.visibility="visible",r=!1}}function o(n){var t,o=document.createDocumentFragment();r?(t=i.querySelector(".message"),t.innerHTML=n):(e.style.visibility="hidden",i.style.display="block",t=document.createElement("p"),t.innerHTML=n,t.setAttribute("class","message"),t.style.lineHeight=i.style.height,o.appendChild(t),i.appendChild(o),r=!0)}var r=!1;return n(),{hide:t,show:o}},function(e,i){"use strict";function n(){RiseVision.Video.play()}function t(){RiseVision.Video.pause()}function o(){RiseVision.Video.stop()}function r(){e.removeEventListener("WebComponentsReady",r),a&&""!==a&&(i.rpc.register("rscmd_play_"+a,n),i.rpc.register("rscmd_pause_"+a,t),i.rpc.register("rscmd_stop_"+a,o),i.rpc.register("rsparam_set_"+a,RiseVision.Video.setAdditionalParams),i.rpc.call("","rsparam_get",null,a,["additionalParams"]))}var s=new i.Prefs,a=s.getString("id");e.oncontextmenu=function(){return!1},e.addEventListener("WebComponentsReady",r)}(window,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-2"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var i=document.getElementsByTagName("script")[0];i.parentNode.insertBefore(e,i)}();
//# sourceMappingURL=data:application/json;base64,
