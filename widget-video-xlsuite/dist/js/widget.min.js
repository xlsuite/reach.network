function loadVideoLinkFromXLSuite(e,n,i){var t="2ae45fc2-72b9-45ce-9771-caf0fabf9c97";console.log("displayKey param",e),$.ajax({url:"https://rn.xlsuite.com/admin/api/liquids/call?api_key="+t+"&tag=load_screen&display_key="+e}).then(function(e){if(!e||!e.screen)return console.log("Error - Returned data is empty",e),i&&i(),void 0;var t=e.screen.channel_url,o=t.substring(t.indexOf("?list=")+6);console.log("Loaded channel URL, channel ID",t,o),n(o)})}if("undefined"==typeof config){var config={SKIN:"skin/RVSkin.xml",STORAGE_ENV:"prod"};"undefined"!=typeof angular&&angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","locales/translation_").constant("LOCALES_SUFIX",".json")}var RiseVision=RiseVision||{};RiseVision.Video={},RiseVision.Video=function(e){"use strict";function n(){clearTimeout(q),q=null}function i(){e.rpc.call("","rsevent_done",null,I.getString("id"))}function t(){e.rpc.call("","rsevent_ready",null,I.getString("id"),!0,!0,!0,!0,!0)}function o(e){P=setInterval(function(){O=S.url+T+"cb="+(new Date).getTime(),E=!1},e)}function r(){n(),q=setTimeout(function(){i()},5e3)}function s(){j=!0,O="",_.show("The selected video does not exist."),w.remove(F,function(){L||r()})}function a(e){O=e,_.hide(),L||d()}function l(e){O=e,E=!1}function c(){var e=w.getFrameObject(F);return L=!0,j?(n(),void 0):(e&&e.pause(),void 0)}function d(){var e=w.getFrameObject(F);return L=!1,j?(r(),void 0):(E?i():e&&e.play(),void 0)}function u(){w.remove(F,function(){i()})}function m(){var e;A||null!==P||o(k),L||(e=w.getFrameObject(F),e.play())}function g(){clearTimeout(N),N=setInterval(function(){console.log("Interval check"),loadVideoLinkFromXLSuite(C,function(e){e!=O&&(O=e,y(O,S.width,S.height))})},x)}function f(n,i){console.log("additional params values",i),Array.isArray(n)&&n.length>0&&"additionalParams"===n[0]&&Array.isArray(i)&&i.length>0&&(S=JSON.parse(i[0]),I=new e.Prefs,S||(S={},console.log("additional params recreated")),document.getElementById("videoContainer").style.height=I.getInt("rsH")+"px",S.width=I.getInt("rsW"),S.height=I.getInt("rsH"),w=new RiseVision.Common.Video.FrameController,A=!1,I.getString("displayId")?(C=I.getString("displayId"),console.log("displayId set from chromeApp param",C)):(C=S.displayId,console.log("displayId set from default settings",C)),loadVideoLinkFromXLSuite(C,p,function(){C!=I.getString("displayId")&&(C=S.displayId,console.log("Trying to use default displayId",C),loadVideoLinkFromXLSuite(C,p))}))}function p(e){O=e,y(O,S.width,S.height),g(),t()}function y(e,n,i){var t=$("#mainIframe");t.attr("src",e),t.attr("width",n),t.attr("height",i),console.log("Video url, w, h",e,n,i),B=new YT.Player("mainIframe",{width:n,height:i,playerVars:{listType:"playlist",list:e,autoplay:1,controls:0,loop:1,showinfo:0},events:{onError:h(),onReady:V(),onStateChange:v()}})}function h(e){console.log("Player error code",e),B&&null!=B&&(B.nextVideo(),console.log("Error, playing next video",e))}function v(e){console.log("On player state change",e)}function V(e){console.log("On player ready",e)}function R(e){console.debug("video-folder::playerError()",e),E=!0,u()}function b(){c()}var S,C,I=null,_=null,w=null,E=!1,A=!1,L=!0,F=0,T="",O="",k=9e5,P=null,x=5e3,q=null,j=!1,N=null,B=null;return{noStorageFile:s,onStorageInit:a,onStorageRefresh:l,pause:c,play:d,setAdditionalParams:f,playerEnded:u,playerReady:m,playerError:R,stop:b}}(gadgets);var RiseVision=RiseVision||{};RiseVision.Video=RiseVision.Video||{},RiseVision.Video.Storage=function(e){"use strict";function n(){var n=document.getElementById("videoStorage");n&&(n.addEventListener("rise-storage-response",function(e){e.detail&&e.detail.url&&(i?(i=!1,RiseVision.Video.onStorageInit(e.detail.url)):e.detail.hasOwnProperty("changed")&&e.detail.changed&&RiseVision.Video.onStorageRefresh(e.detail.url))}),n.addEventListener("rise-storage-no-file",function(){RiseVision.Video.noStorageFile()}),n.setAttribute("folder",e.storage.folder),n.setAttribute("fileName",e.storage.fileName),n.setAttribute("companyId",e.storage.companyId),n.setAttribute("env",config.STORAGE_ENV),n.go())}var i=!0;return{init:n}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Video=RiseVision.Common.Video||{},RiseVision.Common.Video.FrameController=function(){"use strict";function e(e){return document.getElementById(l+e)}function n(n){var i,t=e(n);return i=t.querySelector("iframe"),i?i.contentWindow?i.contentWindow:i.contentDocument.document?i.contentDocument.document:i.contentDocument:null}function i(i){var t,o=e(i),r=n(i);r&&(t=o.querySelector("iframe"),r.remove(),t.setAttribute("src","about:blank"))}function t(n){var i=e(n),t=document.createElement("iframe");t.setAttribute("allowTransparency",!0),t.setAttribute("frameborder","0"),t.setAttribute("scrolling","no"),i.appendChild(t)}function o(i,t,o,r,s){var a,l=e(i),c=n(i);c&&(a=l.querySelector("iframe"),a.onload=function(){a.onload=null,c.init(t,o,r),c.load()},a.setAttribute("src",s))}function r(n){var i=e(n);i.style.visibility="hidden"}function s(e,n){var t=document.getElementById(l+e);i(e),setTimeout(function(){for(;t.firstChild;)t.removeChild(t.firstChild);n&&"function"==typeof n&&n()},200)}function a(n){var i=e(n);i.style.visibility="visible"}var l="if_";return{add:t,createFramePlayer:o,getFrameContainer:e,getFrameObject:n,hide:r,remove:s,show:a}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Message=function(e,n){"use strict";function i(){try{n.style.height=e.style.height}catch(i){console.warn("Can't initialize Message - ",i.message)}}function t(){if(r){for(;n.firstChild;)n.removeChild(n.firstChild);n.style.display="none",e.style.visibility="visible",r=!1}}function o(i){var t,o=document.createDocumentFragment();r?(t=n.querySelector(".message"),t.innerHTML=i):(e.style.visibility="hidden",n.style.display="block",t=document.createElement("p"),t.innerHTML=i,t.setAttribute("class","message"),t.style.lineHeight=n.style.height,o.appendChild(t),n.appendChild(o),r=!0)}var r=!1;return i(),{hide:t,show:o}},function(e,n){"use strict";function i(){RiseVision.Video.play()}function t(){RiseVision.Video.pause()}function o(){RiseVision.Video.stop()}function r(){e.removeEventListener("WebComponentsReady",r),a&&""!==a&&(n.rpc.register("rscmd_play_"+a,i),n.rpc.register("rscmd_pause_"+a,t),n.rpc.register("rscmd_stop_"+a,o),n.rpc.register("rsparam_set_"+a,RiseVision.Video.setAdditionalParams),n.rpc.call("","rsparam_get",null,a,["additionalParams"]))}var s=new n.Prefs,a=s.getString("id");e.oncontextmenu=function(){return!1},e.addEventListener("WebComponentsReady",r)}(window,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-2"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(e,n)}();
//# sourceMappingURL=data:application/json;base64,
