function loadVideoLinkFromXLSuite(e,t){var i="2ae45fc2-72b9-45ce-9771-caf0fabf9c97";console.log("displayKey param",e),$.ajax({url:"https://rn.xlsuite.com/admin/api/liquids/call?api_key="+i+"&tag=load_screen&display_key="+e}).then(function(e){var i=e.screen.channel_url;console.log("Loaded channel URL",i);var n=i+"&amp;autoplay=1&amp;controls=0&amp;showinfo=0 frameborder=0";t(n)})}if("undefined"==typeof config){var config={SKIN:"skin/RVSkin.xml",STORAGE_ENV:"prod"};"undefined"!=typeof angular&&angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","locales/translation_").constant("LOCALES_SUFIX",".json")}var RiseVision=RiseVision||{};RiseVision.Video={},RiseVision.Video=function(e){"use strict";function t(){clearTimeout(T),T=null}function i(){e.rpc.call("","rsevent_done",null,V.getString("id"))}function n(){e.rpc.call("","rsevent_ready",null,V.getString("id"),!0,!0,!0,!0,!0)}function o(e){L=setInterval(function(){E=y.url+A+"cb="+(new Date).getTime(),C=!1},e)}function r(){t(),T=setTimeout(function(){i()},5e3)}function a(){k=!0,E="",R.show("The selected video does not exist."),b.remove(w,function(){_||r()})}function s(e){E=e,R.hide(),_||d()}function l(e){E=e,C=!1}function c(){var e=b.getFrameObject(w);return _=!0,k?(t(),void 0):(e&&e.pause(),void 0)}function d(){var e=b.getFrameObject(w);return _=!1,k?(r(),void 0):(C?i():e?e.play():E&&""!==E&&(b.add(0),b.createFramePlayer(0,y,E,config.SKIN,"player.html")),void 0)}function u(){b.remove(w,function(){i()})}function m(){var e;S||null!==L||o(I),_||(e=b.getFrameObject(w),e.play())}function f(){clearTimeout(P),P=setInterval(function(){console.log("Interval check"),loadVideoLinkFromXLSuite(h,function(e){if(e!=E){E=e;var t=$("#mainIframe");t.attr("src",E)}})},F)}function g(t,i){Array.isArray(t)&&t.length>0&&"additionalParams"===t[0]&&Array.isArray(i)&&i.length>0&&(y=JSON.parse(i[0]),V=new e.Prefs,document.getElementById("videoContainer").style.height=V.getInt("rsH")+"px",y.width=V.getInt("rsW"),y.height=V.getInt("rsH"),b=new RiseVision.Common.Video.FrameController,S=!1,h=y.displayId,loadVideoLinkFromXLSuite(h,function(e){E=e;var t=$("#mainIframe");t.attr("src",E),t.attr("width",y.width),t.attr("height",y.height),f(),n()}))}function p(e){console.debug("video-folder::playerError()",e),C=!0,u()}function v(){c()}var y,h,V=null,R=null,b=null,C=!1,S=!1,_=!0,w=0,A="",E="",I=9e5,L=null,F=5e3,T=null,k=!1,P=null;return{noStorageFile:a,onStorageInit:s,onStorageRefresh:l,pause:c,play:d,setAdditionalParams:g,playerEnded:u,playerReady:m,playerError:p,stop:v}}(gadgets);var RiseVision=RiseVision||{};RiseVision.Video=RiseVision.Video||{},RiseVision.Video.Storage=function(e){"use strict";function t(){var t=document.getElementById("videoStorage");t&&(t.addEventListener("rise-storage-response",function(e){e.detail&&e.detail.url&&(i?(i=!1,RiseVision.Video.onStorageInit(e.detail.url)):e.detail.hasOwnProperty("changed")&&e.detail.changed&&RiseVision.Video.onStorageRefresh(e.detail.url))}),t.addEventListener("rise-storage-no-file",function(){RiseVision.Video.noStorageFile()}),t.setAttribute("folder",e.storage.folder),t.setAttribute("fileName",e.storage.fileName),t.setAttribute("companyId",e.storage.companyId),t.setAttribute("env",config.STORAGE_ENV),t.go())}var i=!0;return{init:t}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Video=RiseVision.Common.Video||{},RiseVision.Common.Video.FrameController=function(){"use strict";function e(e){return document.getElementById(l+e)}function t(t){var i,n=e(t);return i=n.querySelector("iframe"),i?i.contentWindow?i.contentWindow:i.contentDocument.document?i.contentDocument.document:i.contentDocument:null}function i(i){var n,o=e(i),r=t(i);r&&(n=o.querySelector("iframe"),r.remove(),n.setAttribute("src","about:blank"))}function n(t){var i=e(t),n=document.createElement("iframe");n.setAttribute("allowTransparency",!0),n.setAttribute("frameborder","0"),n.setAttribute("scrolling","no"),i.appendChild(n)}function o(i,n,o,r,a){var s,l=e(i),c=t(i);c&&(s=l.querySelector("iframe"),s.onload=function(){s.onload=null,c.init(n,o,r),c.load()},s.setAttribute("src",a))}function r(t){var i=e(t);i.style.visibility="hidden"}function a(e,t){var n=document.getElementById(l+e);i(e),setTimeout(function(){for(;n.firstChild;)n.removeChild(n.firstChild);t&&"function"==typeof t&&t()},200)}function s(t){var i=e(t);i.style.visibility="visible"}var l="if_";return{add:n,createFramePlayer:o,getFrameContainer:e,getFrameObject:t,hide:r,remove:a,show:s}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Message=function(e,t){"use strict";function i(){try{t.style.height=e.style.height}catch(i){console.warn("Can't initialize Message - ",i.message)}}function n(){if(r){for(;t.firstChild;)t.removeChild(t.firstChild);t.style.display="none",e.style.visibility="visible",r=!1}}function o(i){var n,o=document.createDocumentFragment();r?(n=t.querySelector(".message"),n.innerHTML=i):(e.style.visibility="hidden",t.style.display="block",n=document.createElement("p"),n.innerHTML=i,n.setAttribute("class","message"),n.style.lineHeight=t.style.height,o.appendChild(n),t.appendChild(o),r=!0)}var r=!1;return i(),{hide:n,show:o}},function(e,t){"use strict";function i(){RiseVision.Video.play()}function n(){RiseVision.Video.pause()}function o(){RiseVision.Video.stop()}function r(){e.removeEventListener("WebComponentsReady",r),s&&""!==s&&(t.rpc.register("rscmd_play_"+s,i),t.rpc.register("rscmd_pause_"+s,n),t.rpc.register("rscmd_stop_"+s,o),t.rpc.register("rsparam_set_"+s,RiseVision.Video.setAdditionalParams),t.rpc.call("","rsparam_get",null,s,["additionalParams"]))}var a=new t.Prefs,s=a.getString("id");e.oncontextmenu=function(){return!1},e.addEventListener("WebComponentsReady",r)}(window,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-2"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}();
//# sourceMappingURL=data:application/json;base64,
