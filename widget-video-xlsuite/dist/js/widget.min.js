function loadVideoLinkFromXLSuite(e,i,t){var n="2ae45fc2-72b9-45ce-9771-caf0fabf9c97";console.log("displayKey param",e),$.ajax({url:"https://rn.xlsuite.com/admin/api/liquids/call?api_key="+n+"&tag=load_screen&display_key="+e}).then(function(e){if(!e||!e.screen)return console.log("Error - Returned data is empty",e),t&&t(),void 0;var n=e.screen.channel_url,o=n.substring(n.indexOf("?list=")+6);console.log("Loaded channel URL, channel ID",n,o),i(o)})}if("undefined"==typeof config){var config={SKIN:"skin/RVSkin.xml",STORAGE_ENV:"prod"};"undefined"!=typeof angular&&angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","locales/translation_").constant("LOCALES_SUFIX",".json")}var tag=document.createElement("script");tag.src="https://www.youtube.com/iframe_api";var firstScriptTag=document.getElementsByTagName("script")[0];firstScriptTag.parentNode.insertBefore(tag,firstScriptTag);var RiseVision=RiseVision||{};RiseVision.Video={},RiseVision.Video=function(e){"use strict";function i(){e.rpc.call("","rsevent_ready",null,R.getString("id"),!0,!0,!0,!0,!0)}function t(){}function n(){}function o(){}function r(){}function s(){}function a(){}function l(){}function c(){clearTimeout(E),E=setInterval(function(){console.log("Interval check"),loadVideoLinkFromXLSuite(V,function(e){e!=S&&(S=e,g(S,v.width,v.height))})},b)}function d(i,t){console.log("additional params values",t),Array.isArray(i)&&i.length>0&&"additionalParams"===i[0]&&Array.isArray(t)&&t.length>0&&(v=JSON.parse(t[0]),R=new e.Prefs,v||(v={},console.log("additional params recreated")),document.getElementById("videoContainer").style.height=R.getInt("rsH")+"px",v.width=R.getInt("rsW"),v.height=R.getInt("rsH"),R.getString("displayId")?(V=R.getString("displayId"),console.log("displayId set from chromeApp param",V)):(V=v.displayId,console.log("displayId set from default settings",V)),loadVideoLinkFromXLSuite(V,u,function(){V!=R.getString("displayId")&&(V=v.displayId,console.log("Trying to use default displayId",V),loadVideoLinkFromXLSuite(V,u))}))}function u(e){S=e,g(S,v.width,v.height),c(),i()}function g(e,i,t){console.log("Video url, w, h",e,i,t),_=new YT.Player("mainIframe",{width:i,height:t,playerVars:{listType:"playlist",list:e,autoplay:1,controls:0,loop:1,showinfo:0},events:{onError:m,onReady:p,onStateChange:f}})}function m(e){console.log("Player error code",e),_&&null!=_&&e&&e.data>=100&&(_.nextVideo(),console.log("Error, playing next video",e))}function f(){}function p(){}function y(e){console.debug("video-folder::playerError()",e),a()}function h(){r()}var v,V,R=null,S="",b=5e3,E=null,_=null;return{noStorageFile:t,onStorageInit:n,onStorageRefresh:o,pause:r,play:s,setAdditionalParams:d,playerEnded:a,playerReady:l,playerError:y,stop:h}}(gadgets);var RiseVision=RiseVision||{};RiseVision.Video=RiseVision.Video||{},RiseVision.Video.Storage=function(e){"use strict";function i(){var i=document.getElementById("videoStorage");i&&(i.addEventListener("rise-storage-response",function(e){e.detail&&e.detail.url&&(t?(t=!1,RiseVision.Video.onStorageInit(e.detail.url)):e.detail.hasOwnProperty("changed")&&e.detail.changed&&RiseVision.Video.onStorageRefresh(e.detail.url))}),i.addEventListener("rise-storage-no-file",function(){RiseVision.Video.noStorageFile()}),i.setAttribute("folder",e.storage.folder),i.setAttribute("fileName",e.storage.fileName),i.setAttribute("companyId",e.storage.companyId),i.setAttribute("env",config.STORAGE_ENV),i.go())}var t=!0;return{init:i}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Video=RiseVision.Common.Video||{},RiseVision.Common.Video.FrameController=function(){"use strict";function e(e){return document.getElementById(l+e)}function i(i){var t,n=e(i);return t=n.querySelector("iframe"),t?t.contentWindow?t.contentWindow:t.contentDocument.document?t.contentDocument.document:t.contentDocument:null}function t(t){var n,o=e(t),r=i(t);r&&(n=o.querySelector("iframe"),r.remove(),n.setAttribute("src","about:blank"))}function n(i){var t=e(i),n=document.createElement("iframe");n.setAttribute("allowTransparency",!0),n.setAttribute("frameborder","0"),n.setAttribute("scrolling","no"),t.appendChild(n)}function o(t,n,o,r,s){var a,l=e(t),c=i(t);c&&(a=l.querySelector("iframe"),a.onload=function(){a.onload=null,c.init(n,o,r),c.load()},a.setAttribute("src",s))}function r(i){var t=e(i);t.style.visibility="hidden"}function s(e,i){var n=document.getElementById(l+e);t(e),setTimeout(function(){for(;n.firstChild;)n.removeChild(n.firstChild);i&&"function"==typeof i&&i()},200)}function a(i){var t=e(i);t.style.visibility="visible"}var l="if_";return{add:n,createFramePlayer:o,getFrameContainer:e,getFrameObject:i,hide:r,remove:s,show:a}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Message=function(e,i){"use strict";function t(){try{i.style.height=e.style.height}catch(t){console.warn("Can't initialize Message - ",t.message)}}function n(){if(r){for(;i.firstChild;)i.removeChild(i.firstChild);i.style.display="none",e.style.visibility="visible",r=!1}}function o(t){var n,o=document.createDocumentFragment();r?(n=i.querySelector(".message"),n.innerHTML=t):(e.style.visibility="hidden",i.style.display="block",n=document.createElement("p"),n.innerHTML=t,n.setAttribute("class","message"),n.style.lineHeight=i.style.height,o.appendChild(n),i.appendChild(o),r=!0)}var r=!1;return t(),{hide:n,show:o}},function(e,i){"use strict";function t(){RiseVision.Video.play()}function n(){RiseVision.Video.pause()}function o(){RiseVision.Video.stop()}function r(){e.removeEventListener("WebComponentsReady",r),a&&""!==a&&(i.rpc.register("rscmd_play_"+a,t),i.rpc.register("rscmd_pause_"+a,n),i.rpc.register("rscmd_stop_"+a,o),i.rpc.register("rsparam_set_"+a,RiseVision.Video.setAdditionalParams),i.rpc.call("","rsparam_get",null,a,["additionalParams"]))}var s=new i.Prefs,a=s.getString("id");e.oncontextmenu=function(){return!1},e.addEventListener("WebComponentsReady",r)}(window,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-2"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var i=document.getElementsByTagName("script")[0];i.parentNode.insertBefore(e,i)}();
//# sourceMappingURL=data:application/json;base64,
