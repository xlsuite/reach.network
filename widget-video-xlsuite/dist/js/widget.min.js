function loadVideoLinkFromXLSuite(e,i,t){var n="2ae45fc2-72b9-45ce-9771-caf0fabf9c97";console.log("displayKey param",e),$.ajax({url:"https://rn.xlsuite.com/admin/api/liquids/call?api_key="+n+"&tag=load_screen&display_key="+e}).then(function(e){if(!e||!e.screen)return console.log("Error - Returned data is empty",e),t&&t(),void 0;var n=e.screen.channel_url;console.log("Loaded channel URL",n);var o=n+"&amp;autoplay=1&amp;loop=1&amp;controls=0&amp;showinfo=0 frameborder=0";i(o)})}if("undefined"==typeof config){var config={SKIN:"skin/RVSkin.xml",STORAGE_ENV:"prod"};"undefined"!=typeof angular&&angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","locales/translation_").constant("LOCALES_SUFIX",".json")}var RiseVision=RiseVision||{};RiseVision.Video={},RiseVision.Video=function(e){"use strict";function i(){clearTimeout(k),k=null}function t(){e.rpc.call("","rsevent_done",null,R.getString("id"))}function n(){e.rpc.call("","rsevent_ready",null,R.getString("id"),!0,!0,!0,!0,!0)}function o(e){F=setInterval(function(){w=h.url+E+"cb="+(new Date).getTime(),I=!1},e)}function r(){i(),k=setTimeout(function(){t()},5e3)}function a(){P=!0,w="",b.show("The selected video does not exist."),S.remove(A,function(){_||r()})}function s(e){w=e,b.hide(),_||d()}function l(e){w=e,I=!1}function c(){var e=S.getFrameObject(A);return _=!0,P?(i(),void 0):(e&&e.pause(),void 0)}function d(){var e=S.getFrameObject(A);return _=!1,P?(r(),void 0):(I?t():e?e.play():w&&""!==w&&(S.add(0),S.createFramePlayer(0,h,w,config.SKIN,"player.html")),void 0)}function u(){S.remove(A,function(){t()})}function m(){var e;C||null!==F||o(L),_||(e=S.getFrameObject(A),e.play())}function f(){clearTimeout(O),O=setInterval(function(){console.log("Interval check"),loadVideoLinkFromXLSuite(V,function(e){if(e!=w){w=e;var i=$("#mainIframe");i.attr("src",w)}})},T)}function g(i,t){console.log("additional params values",t),Array.isArray(i)&&i.length>0&&"additionalParams"===i[0]&&Array.isArray(t)&&t.length>0&&(h=JSON.parse(t[0]),R=new e.Prefs,h||(h={},console.log("additional params recreated")),document.getElementById("videoContainer").style.height=R.getInt("rsH")+"px",h.width=R.getInt("rsW"),h.height=R.getInt("rsH"),S=new RiseVision.Common.Video.FrameController,C=!1,R.getString("displayId")?(V=R.getString("displayId"),console.log("displayId set from chromeApp param",V)):(V=h.displayId,console.log("displayId set from default settings",V)),loadVideoLinkFromXLSuite(V,p,function(){V!=R.getString("displayId")&&(V=h.displayId,console.log("Trying to use default displayId",V),loadVideoLinkFromXLSuite(V,p))}))}function p(e){w=e;var i=$("#mainIframe");i.attr("src",w),i.attr("width",h.width),i.attr("height",h.height),f(),n()}function y(e){console.debug("video-folder::playerError()",e),I=!0,u()}function v(){c()}var h,V,R=null,b=null,S=null,I=!1,C=!1,_=!0,A=0,E="",w="",L=9e5,F=null,T=5e3,k=null,P=!1,O=null;return{noStorageFile:a,onStorageInit:s,onStorageRefresh:l,pause:c,play:d,setAdditionalParams:g,playerEnded:u,playerReady:m,playerError:y,stop:v}}(gadgets);var RiseVision=RiseVision||{};RiseVision.Video=RiseVision.Video||{},RiseVision.Video.Storage=function(e){"use strict";function i(){var i=document.getElementById("videoStorage");i&&(i.addEventListener("rise-storage-response",function(e){e.detail&&e.detail.url&&(t?(t=!1,RiseVision.Video.onStorageInit(e.detail.url)):e.detail.hasOwnProperty("changed")&&e.detail.changed&&RiseVision.Video.onStorageRefresh(e.detail.url))}),i.addEventListener("rise-storage-no-file",function(){RiseVision.Video.noStorageFile()}),i.setAttribute("folder",e.storage.folder),i.setAttribute("fileName",e.storage.fileName),i.setAttribute("companyId",e.storage.companyId),i.setAttribute("env",config.STORAGE_ENV),i.go())}var t=!0;return{init:i}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Video=RiseVision.Common.Video||{},RiseVision.Common.Video.FrameController=function(){"use strict";function e(e){return document.getElementById(l+e)}function i(i){var t,n=e(i);return t=n.querySelector("iframe"),t?t.contentWindow?t.contentWindow:t.contentDocument.document?t.contentDocument.document:t.contentDocument:null}function t(t){var n,o=e(t),r=i(t);r&&(n=o.querySelector("iframe"),r.remove(),n.setAttribute("src","about:blank"))}function n(i){var t=e(i),n=document.createElement("iframe");n.setAttribute("allowTransparency",!0),n.setAttribute("frameborder","0"),n.setAttribute("scrolling","no"),t.appendChild(n)}function o(t,n,o,r,a){var s,l=e(t),c=i(t);c&&(s=l.querySelector("iframe"),s.onload=function(){s.onload=null,c.init(n,o,r),c.load()},s.setAttribute("src",a))}function r(i){var t=e(i);t.style.visibility="hidden"}function a(e,i){var n=document.getElementById(l+e);t(e),setTimeout(function(){for(;n.firstChild;)n.removeChild(n.firstChild);i&&"function"==typeof i&&i()},200)}function s(i){var t=e(i);t.style.visibility="visible"}var l="if_";return{add:n,createFramePlayer:o,getFrameContainer:e,getFrameObject:i,hide:r,remove:a,show:s}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Message=function(e,i){"use strict";function t(){try{i.style.height=e.style.height}catch(t){console.warn("Can't initialize Message - ",t.message)}}function n(){if(r){for(;i.firstChild;)i.removeChild(i.firstChild);i.style.display="none",e.style.visibility="visible",r=!1}}function o(t){var n,o=document.createDocumentFragment();r?(n=i.querySelector(".message"),n.innerHTML=t):(e.style.visibility="hidden",i.style.display="block",n=document.createElement("p"),n.innerHTML=t,n.setAttribute("class","message"),n.style.lineHeight=i.style.height,o.appendChild(n),i.appendChild(o),r=!0)}var r=!1;return t(),{hide:n,show:o}},function(e,i){"use strict";function t(){RiseVision.Video.play()}function n(){RiseVision.Video.pause()}function o(){RiseVision.Video.stop()}function r(){e.removeEventListener("WebComponentsReady",r),s&&""!==s&&(i.rpc.register("rscmd_play_"+s,t),i.rpc.register("rscmd_pause_"+s,n),i.rpc.register("rscmd_stop_"+s,o),i.rpc.register("rsparam_set_"+s,RiseVision.Video.setAdditionalParams),i.rpc.call("","rsparam_get",null,s,["additionalParams"]))}var a=new i.Prefs,s=a.getString("id");e.oncontextmenu=function(){return!1},e.addEventListener("WebComponentsReady",r)}(window,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-2"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var i=document.getElementsByTagName("script")[0];i.parentNode.insertBefore(e,i)}();
//# sourceMappingURL=data:application/json;base64,
