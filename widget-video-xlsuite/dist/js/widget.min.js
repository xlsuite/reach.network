if("undefined"==typeof config){var config={SKIN:"skin/RVSkin.xml",STORAGE_ENV:"prod"};"undefined"!=typeof angular&&angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","locales/translation_").constant("LOCALES_SUFIX",".json")}var RiseVision=RiseVision||{};RiseVision.Video={},RiseVision.Video=function(e){"use strict";function t(){clearTimeout(F),F=null}function i(){e.rpc.call("","rsevent_done",null,v.getString("id"))}function n(){e.rpc.call("","rsevent_ready",null,v.getString("id"),!0,!0,!0,!0,!0)}function o(e){I=setInterval(function(){_=p.url+E+"cb="+(new Date).getTime(),C=!1},e)}function r(){t(),F=setTimeout(function(){i()},5e3)}function s(){P=!0,_="",h.show("The selected video does not exist."),R.remove(S,function(){w||r()})}function a(e){_=e,h.hide(),w||d()}function l(e){_=e,C=!1}function c(){var e=R.getFrameObject(S);return w=!0,P?(t(),void 0):(e&&e.pause(),void 0)}function d(){var e=R.getFrameObject(S);return w=!1,P?(r(),void 0):(C?i():e?e.play():_&&""!==_&&(R.add(0),R.createFramePlayer(0,p,_,config.SKIN,"player.html")),void 0)}function u(){R.remove(S,function(){i()})}function m(){var e;b||null!==I||o(A),w||(e=R.getFrameObject(S),e.play())}function g(t,i){var o;Array.isArray(t)&&t.length>0&&"additionalParams"===t[0]&&Array.isArray(i)&&i.length>0&&(p=JSON.parse(i[0]),v=new e.Prefs,document.getElementById("videoContainer").style.height=v.getInt("rsH")+"px",p.width=v.getInt("rsW"),p.height=v.getInt("rsH"),h=new RiseVision.Common.Message(document.getElementById("videoContainer"),document.getElementById("messageContainer")),h.show("Please wait while your video is downloaded."),R=new RiseVision.Common.Video.FrameController,b=0!==Object.keys(p.storage).length,b?(V=new RiseVision.Video.Storage(p),V.init()):(o=p.url.split("?"),E=1===o.length?"?":"&",_=p.url),n())}function f(e){console.debug("video-folder::playerError()",e),C=!0,u()}function y(){c()}var p,v=null,V=null,h=null,R=null,C=!1,b=!1,w=!0,S=0,E="",_="",A=9e5,I=null,F=null,P=!1;return{noStorageFile:s,onStorageInit:a,onStorageRefresh:l,pause:c,play:d,setAdditionalParams:g,playerEnded:u,playerReady:m,playerError:f,stop:y}}(gadgets);var RiseVision=RiseVision||{};RiseVision.Video=RiseVision.Video||{},RiseVision.Video.Storage=function(e){"use strict";function t(){var t=document.getElementById("videoStorage");t&&(t.addEventListener("rise-storage-response",function(e){e.detail&&e.detail.url&&(i?(i=!1,RiseVision.Video.onStorageInit(e.detail.url)):e.detail.hasOwnProperty("changed")&&e.detail.changed&&RiseVision.Video.onStorageRefresh(e.detail.url))}),t.addEventListener("rise-storage-no-file",function(){RiseVision.Video.noStorageFile()}),t.setAttribute("folder",e.storage.folder),t.setAttribute("fileName",e.storage.fileName),t.setAttribute("companyId",e.storage.companyId),t.setAttribute("env",config.STORAGE_ENV),t.go())}var i=!0;return{init:t}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Video=RiseVision.Common.Video||{},RiseVision.Common.Video.FrameController=function(){"use strict";function e(e){return document.getElementById(l+e)}function t(t){var i,n=e(t);return i=n.querySelector("iframe"),i?i.contentWindow?i.contentWindow:i.contentDocument.document?i.contentDocument.document:i.contentDocument:null}function i(i){var n,o=e(i),r=t(i);r&&(n=o.querySelector("iframe"),r.remove(),n.setAttribute("src","about:blank"))}function n(t){var i=e(t),n=document.createElement("iframe");n.setAttribute("allowTransparency",!0),n.setAttribute("frameborder","0"),n.setAttribute("scrolling","no"),i.appendChild(n)}function o(i,n,o,r,s){var a,l=e(i),c=t(i);c&&(a=l.querySelector("iframe"),a.onload=function(){a.onload=null,c.init(n,o,r),c.load()},a.setAttribute("src",s))}function r(t){var i=e(t);i.style.visibility="hidden"}function s(e,t){var n=document.getElementById(l+e);i(e),setTimeout(function(){for(;n.firstChild;)n.removeChild(n.firstChild);t&&"function"==typeof t&&t()},200)}function a(t){var i=e(t);i.style.visibility="visible"}var l="if_";return{add:n,createFramePlayer:o,getFrameContainer:e,getFrameObject:t,hide:r,remove:s,show:a}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Message=function(e,t){"use strict";function i(){try{t.style.height=e.style.height}catch(i){console.warn("Can't initialize Message - ",i.message)}}function n(){if(r){for(;t.firstChild;)t.removeChild(t.firstChild);t.style.display="none",e.style.visibility="visible",r=!1}}function o(i){var n,o=document.createDocumentFragment();r?(n=t.querySelector(".message"),n.innerHTML=i):(e.style.visibility="hidden",t.style.display="block",n=document.createElement("p"),n.innerHTML=i,n.setAttribute("class","message"),n.style.lineHeight=t.style.height,o.appendChild(n),t.appendChild(o),r=!0)}var r=!1;return i(),{hide:n,show:o}},function(e,t){"use strict";function i(){RiseVision.Video.play()}function n(){RiseVision.Video.pause()}function o(){RiseVision.Video.stop()}function r(){e.removeEventListener("WebComponentsReady",r),a&&""!==a&&(t.rpc.register("rscmd_play_"+a,i),t.rpc.register("rscmd_pause_"+a,n),t.rpc.register("rscmd_stop_"+a,o),t.rpc.register("rsparam_set_"+a,RiseVision.Video.setAdditionalParams),t.rpc.call("","rsparam_get",null,a,["additionalParams"]))}var s=new t.Prefs,a=s.getString("id");e.oncontextmenu=function(){return!1},e.addEventListener("WebComponentsReady",r)}(window,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-2"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}();
//# sourceMappingURL=data:application/json;base64,
