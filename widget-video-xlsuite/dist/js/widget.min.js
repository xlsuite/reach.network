function loadVideoLinkFromXLSuite(e){var i="2ae45fc2-72b9-45ce-9771-caf0fabf9c97",n="12345";$.ajax({url:"https://rn.xlsuite.com/admin/api/liquids/call?api_key="+i+"&tag=load_screen&display_key="+n}).then(function(i){var n=i.screen.channel_url;console.log("Loaded channel URL",n),n="PL48ZGwCpwPyFViELgsnvUknRzJyo2gOhA",console.log("Trying to play",n),e(n)})}if("undefined"==typeof config){var config={SKIN:"skin/RVSkin.xml",STORAGE_ENV:"prod"};"undefined"!=typeof angular&&angular.module("risevision.common.i18n.config",[]).constant("LOCALES_PREFIX","locales/translation_").constant("LOCALES_SUFIX",".json")}var RiseVision=RiseVision||{};RiseVision.Video={},RiseVision.Video=function(e){"use strict";function i(){clearTimeout(L),L=null}function n(){e.rpc.call("","rsevent_done",null,v.getString("id"))}function t(){e.rpc.call("","rsevent_ready",null,v.getString("id"),!0,!0,!0,!0,!0)}function o(e){w=setInterval(function(){A=y.url+S+"cb="+(new Date).getTime(),R=!1},e)}function r(){i(),L=setTimeout(function(){n()},5e3)}function s(){F=!0,A="",V.show("The selected video does not exist."),h.remove(_,function(){C||r()})}function a(e){A=e,V.hide(),C||u()}function l(e){A=e,R=!1}function c(){var e=h.getFrameObject(_);return C=!0,F?(i(),void 0):(e&&e.pause(),void 0)}function u(){var e=h.getFrameObject(_);return C=!1,F?(r(),void 0):(R?n():e?e.play():A&&""!==A&&(h.add(0),h.createFramePlayer(0,y,A,config.SKIN,"player.html")),void 0)}function d(){h.remove(_,function(){n()})}function m(){var e;b||null!==w||o(E),C||(e=h.getFrameObject(_),e.play())}function f(i,n){var o;Array.isArray(i)&&i.length>0&&"additionalParams"===i[0]&&Array.isArray(n)&&n.length>0&&(y=JSON.parse(n[0]),v=new e.Prefs,document.getElementById("videoContainer").style.height=v.getInt("rsH")+"px",y.width=v.getInt("rsW"),y.height=v.getInt("rsH"),h=new RiseVision.Common.Video.FrameController,b=!1,o=y.url.split("?"),S=1===o.length?"?":"&",A=y.url,loadVideoLinkFromXLSuite(function(e){A=e,t()}))}function g(e){console.debug("video-folder::playerError()",e),R=!0,d()}function p(){c()}var y,v=null,V=null,h=null,R=!1,b=!1,C=!0,_=0,S="",A="",E=9e5,w=null,L=null,F=!1;return{noStorageFile:s,onStorageInit:a,onStorageRefresh:l,pause:c,play:u,setAdditionalParams:f,playerEnded:d,playerReady:m,playerError:g,stop:p}}(gadgets);var RiseVision=RiseVision||{};RiseVision.Video=RiseVision.Video||{},RiseVision.Video.Storage=function(e){"use strict";function i(){var i=document.getElementById("videoStorage");i&&(i.addEventListener("rise-storage-response",function(e){e.detail&&e.detail.url&&(n?(n=!1,RiseVision.Video.onStorageInit(e.detail.url)):e.detail.hasOwnProperty("changed")&&e.detail.changed&&RiseVision.Video.onStorageRefresh(e.detail.url))}),i.addEventListener("rise-storage-no-file",function(){RiseVision.Video.noStorageFile()}),i.setAttribute("folder",e.storage.folder),i.setAttribute("fileName",e.storage.fileName),i.setAttribute("companyId",e.storage.companyId),i.setAttribute("env",config.STORAGE_ENV),i.go())}var n=!0;return{init:i}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Video=RiseVision.Common.Video||{},RiseVision.Common.Video.FrameController=function(){"use strict";function e(e){return document.getElementById(l+e)}function i(i){var n,t=e(i);return n=t.querySelector("iframe"),n?n.contentWindow?n.contentWindow:n.contentDocument.document?n.contentDocument.document:n.contentDocument:null}function n(n){var t,o=e(n),r=i(n);r&&(t=o.querySelector("iframe"),r.remove(),t.setAttribute("src","about:blank"))}function t(i){var n=e(i),t=document.createElement("iframe");t.setAttribute("allowTransparency",!0),t.setAttribute("frameborder","0"),t.setAttribute("scrolling","no"),n.appendChild(t)}function o(n,t,o,r,s){var a,l=e(n),c=i(n);c&&(a=l.querySelector("iframe"),a.onload=function(){a.onload=null,c.init(t,o,r),c.load()},a.setAttribute("src",s))}function r(i){var n=e(i);n.style.visibility="hidden"}function s(e,i){var t=document.getElementById(l+e);n(e),setTimeout(function(){for(;t.firstChild;)t.removeChild(t.firstChild);i&&"function"==typeof i&&i()},200)}function a(i){var n=e(i);n.style.visibility="visible"}var l="if_";return{add:t,createFramePlayer:o,getFrameContainer:e,getFrameObject:i,hide:r,remove:s,show:a}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Message=function(e,i){"use strict";function n(){try{i.style.height=e.style.height}catch(n){console.warn("Can't initialize Message - ",n.message)}}function t(){if(r){for(;i.firstChild;)i.removeChild(i.firstChild);i.style.display="none",e.style.visibility="visible",r=!1}}function o(n){var t,o=document.createDocumentFragment();r?(t=i.querySelector(".message"),t.innerHTML=n):(e.style.visibility="hidden",i.style.display="block",t=document.createElement("p"),t.innerHTML=n,t.setAttribute("class","message"),t.style.lineHeight=i.style.height,o.appendChild(t),i.appendChild(o),r=!0)}var r=!1;return n(),{hide:t,show:o}},function(e,i){"use strict";function n(){RiseVision.Video.play()}function t(){RiseVision.Video.pause()}function o(){RiseVision.Video.stop()}function r(){e.removeEventListener("WebComponentsReady",r),a&&""!==a&&(i.rpc.register("rscmd_play_"+a,n),i.rpc.register("rscmd_pause_"+a,t),i.rpc.register("rscmd_stop_"+a,o),i.rpc.register("rsparam_set_"+a,RiseVision.Video.setAdditionalParams),i.rpc.call("","rsparam_get",null,a,["additionalParams"]))}var s=new i.Prefs,a=s.getString("id");e.oncontextmenu=function(){return!1},e.addEventListener("WebComponentsReady",r)}(window,gadgets);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-2"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var i=document.getElementsByTagName("script")[0];i.parentNode.insertBefore(e,i)}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzL3dpZGdldC5taW4uanMiXSwibmFtZXMiOlsibG9hZFZpZGVvTGlua0Zyb21YTFN1aXRlIiwiY2FsbGJhY2siLCJhcGlLZXkiLCJkaXNwbGF5S2V5IiwiJCIsImFqYXgiLCJ1cmwiLCJ0aGVuIiwiZGF0YSIsImNoYW5lbFVybCIsInNjcmVlbiIsImNoYW5uZWxfdXJsIiwiY29uc29sZSIsImxvZyIsImNvbmZpZyIsIlNLSU4iLCJTVE9SQUdFX0VOViIsImFuZ3VsYXIiLCJtb2R1bGUiLCJjb25zdGFudCIsIlJpc2VWaXNpb24iLCJWaWRlbyIsImdhZGdldHMiLCJfY2xlYXJOb0ZpbGVUaW1lciIsImNsZWFyVGltZW91dCIsIl9ub0ZpbGVUaW1lciIsIl9kb25lIiwicnBjIiwiY2FsbCIsIl9wcmVmcyIsImdldFN0cmluZyIsIl9yZWFkeSIsIl9yZWZyZXNoSW50ZXJ2YWwiLCJkdXJhdGlvbiIsIl9yZWZyZXNoSW50ZXJ2YWxJZCIsInNldEludGVydmFsIiwiX2N1cnJlbnRGaWxlIiwiX2FkZGl0aW9uYWxQYXJhbXMiLCJfc2VwYXJhdG9yIiwiRGF0ZSIsImdldFRpbWUiLCJfcGxheWJhY2tFcnJvciIsIl9zdGFydE5vRmlsZVRpbWVyIiwic2V0VGltZW91dCIsIm5vU3RvcmFnZUZpbGUiLCJfbm9GaWxlRmxhZyIsIl9tZXNzYWdlIiwic2hvdyIsIl9mcmFtZUNvbnRyb2xsZXIiLCJyZW1vdmUiLCJfY3VycmVudEZyYW1lIiwiX3ZpZXdlclBhdXNlZCIsIm9uU3RvcmFnZUluaXQiLCJoaWRlIiwicGxheSIsIm9uU3RvcmFnZVJlZnJlc2giLCJwYXVzZSIsImZyYW1lT2JqIiwiZ2V0RnJhbWVPYmplY3QiLCJhZGQiLCJjcmVhdGVGcmFtZVBsYXllciIsInBsYXllckVuZGVkIiwicGxheWVyUmVhZHkiLCJfaXNTdG9yYWdlRmlsZSIsIl9yZWZyZXNoRHVyYXRpb24iLCJzZXRBZGRpdGlvbmFsUGFyYW1zIiwibmFtZXMiLCJ2YWx1ZXMiLCJzdHIiLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJKU09OIiwicGFyc2UiLCJQcmVmcyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJzdHlsZSIsImhlaWdodCIsImdldEludCIsIndpZHRoIiwiQ29tbW9uIiwiRnJhbWVDb250cm9sbGVyIiwic3BsaXQiLCJ2aWRlb1VybCIsInBsYXllckVycm9yIiwiZXJyb3IiLCJkZWJ1ZyIsInN0b3AiLCJTdG9yYWdlIiwiaW5pdCIsInN0b3JhZ2UiLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsImRldGFpbCIsIl9pbml0aWFsTG9hZCIsImhhc093blByb3BlcnR5IiwiY2hhbmdlZCIsInNldEF0dHJpYnV0ZSIsImZvbGRlciIsImZpbGVOYW1lIiwiY29tcGFueUlkIiwiZ28iLCJnZXRGcmFtZUNvbnRhaW5lciIsImluZGV4IiwiUFJFRklYIiwiaWZyYW1lIiwiZnJhbWVDb250YWluZXIiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudFdpbmRvdyIsImNvbnRlbnREb2N1bWVudCIsIl9jbGVhciIsImNyZWF0ZUVsZW1lbnQiLCJhcHBlbmRDaGlsZCIsInBhcmFtcyIsImZpbGVzIiwic2tpbiIsInNyYyIsIm9ubG9hZCIsImxvYWQiLCJ2aXNpYmlsaXR5IiwiZmlyc3RDaGlsZCIsInJlbW92ZUNoaWxkIiwiTWVzc2FnZSIsIm1haW5Db250YWluZXIiLCJtZXNzYWdlQ29udGFpbmVyIiwiX2luaXQiLCJ3YXJuIiwibWVzc2FnZSIsIl9hY3RpdmUiLCJkaXNwbGF5IiwicCIsImZyYWdtZW50IiwiY3JlYXRlRG9jdW1lbnRGcmFnbWVudCIsImlubmVySFRNTCIsImxpbmVIZWlnaHQiLCJ3aW5kb3ciLCJwb2x5bWVyUmVhZHkiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiaWQiLCJyZWdpc3RlciIsInByZWZzIiwib25jb250ZXh0bWVudSIsIl9nYXEiLCJwdXNoIiwiZ2EiLCJ0eXBlIiwiYXN5bmMiLCJsb2NhdGlvbiIsInByb3RvY29sIiwicyIsImdldEVsZW1lbnRzQnlUYWdO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QVFvRCxNQUN0QmlFLEVBQUtFLEVBQU0vRyxVQUFVLEtBR3ZCMEcsR0FBT00sY0FBZ0IsV0FDckIsT0FBTyxHQTRCVE4sRUFBTzVDLGlCQUFpQixxQkFBc0I2QyxJQUU3Q0QsT0FBUWxILFFBS1gsSUFBSXlILE1BQU9BLFFBRVhBLE1BQUtDLE1BQU0sY0FBZSxrQkFDMUJELEtBQUtDLE1BQU0sbUJBRVgsV0FDRSxHQUFJQyxHQUFLdEUsU0FBU3FDLGNBQWMsU0FBV2lDLEdBQUdDLEtBQU8sa0JBQW1CRCxFQUFHRSxPQUFRLEVBQ25GRixFQUFHNUIsS0FBTyxVQUFZMUMsU0FBU3lFLFNBQVNDLFNBQVcsY0FBZ0IsY0FBZ0IsNkJBQ25GLElBQUlDLEdBQUkzRSxTQUFTNEUscUJBQXFCLFVBQVUsRUFBSUQsR0FBRUUsV0FBV0MsYUFBYVIsRUFBSUsiLCJmaWxlIjoianMvd2lkZ2V0Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbCBjb25maWc6IHRydWUgKi9cbi8qIGV4cG9ydGVkIGNvbmZpZyAqL1xuaWYgKHR5cGVvZiBjb25maWcgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgdmFyIGNvbmZpZyA9IHtcbiAgICBTS0lOOiBcInNraW4vUlZTa2luLnhtbFwiLFxuICAgIFNUT1JBR0VfRU5WOiBcInByb2RcIlxuICB9O1xuXG4gIGlmICh0eXBlb2YgYW5ndWxhciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGFuZ3VsYXIubW9kdWxlKFwicmlzZXZpc2lvbi5jb21tb24uaTE4bi5jb25maWdcIiwgW10pXG4gICAgICAuY29uc3RhbnQoXCJMT0NBTEVTX1BSRUZJWFwiLCBcImxvY2FsZXMvdHJhbnNsYXRpb25fXCIpXG4gICAgICAuY29uc3RhbnQoXCJMT0NBTEVTX1NVRklYXCIsIFwiLmpzb25cIik7XG4gIH1cbn1cblxyXG4ndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGxvYWRWaWRlb0xpbmtGcm9tWExTdWl0ZShjYWxsYmFjaykge1xuICB2YXIgYXBpS2V5ID0gXCIyYWU0NWZjMi03MmI5LTQ1Y2UtOTc3MS1jYWYwZmFiZjljOTdcIjtcblxuICAvL3RvZG86IGdldCBkaXNwbGF5IGtleSBmcm9tIHNldHRpbmdzXG4gIHZhciBkaXNwbGF5S2V5ID0gXCIxMjM0NVwiO1xuXG4gICQuYWpheCh7XG4gICAgdXJsOiBcImh0dHBzOi8vcm4ueGxzdWl0ZS5jb20vYWRtaW4vYXBpL2xpcXVpZHMvY2FsbD9hcGlfa2V5PVwiICsgYXBpS2V5ICsgXCImdGFnPWxvYWRfc2NyZWVuJmRpc3BsYXlfa2V5PVwiICsgZGlzcGxheUtleVxuICB9KS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgdmFyIGNoYW5lbFVybCA9IGRhdGEuc2NyZWVuLmNoYW5uZWxfdXJsO1xuXG4gICAgLy90b2RvOiBzYXZlIGNoYW5uZWwgVVJMIHRvIHNvbWUgc2V0dGluZ3MgLyB2YXJpYWJsZVxuICAgIGNvbnNvbGUubG9nKFwiTG9hZGVkIGNoYW5uZWwgVVJMXCIsIGNoYW5lbFVybCk7XG4gICAgICAgICAgICAgLy9QTG41NlZieE9TNzdmZC1xYlp3MG12blMyUG1fX3R2U0haXG4gICAgY2hhbmVsVXJsID0gXCJQTDQ4Wkd3Q3B3UHlGVmlFTGdzbnZVa25Sekp5bzJnT2hBXCI7XG4gICAgY29uc29sZS5sb2coXCJUcnlpbmcgdG8gcGxheVwiLCBjaGFuZWxVcmwpO1xuICAgIGNhbGxiYWNrKGNoYW5lbFVybCk7XG4gIH0pO1xuXG4gIC8vICAgIGNhbGxiYWNrKFwiaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvdmlkZW9zZXJpZXM/bGlzdD1QTG41NlZieE9TNzdmZC1xYlp3MG12blMyUG1fX3R2U0haXCIpO1xuXG59XG5cclxuLyogZ2xvYmFsIGdhZGdldHMsIGNvbmZpZyAqL1xuXG52YXIgUmlzZVZpc2lvbiA9IFJpc2VWaXNpb24gfHwge307XG5SaXNlVmlzaW9uLlZpZGVvID0ge307XG5cblJpc2VWaXNpb24uVmlkZW8gPSAoZnVuY3Rpb24gKGdhZGdldHMpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgdmFyIF9hZGRpdGlvbmFsUGFyYW1zO1xuXG4gIHZhciBfcHJlZnMgPSBudWxsLFxuICAgIF9zdG9yYWdlID0gbnVsbCxcbiAgICBfbWVzc2FnZSA9IG51bGwsXG4gICAgX2ZyYW1lQ29udHJvbGxlciA9IG51bGw7XG5cbiAgdmFyIF9wbGF5YmFja0Vycm9yID0gZmFsc2UsXG4gICAgX2lzU3RvcmFnZUZpbGUgPSBmYWxzZSxcbiAgICBfdmlld2VyUGF1c2VkID0gdHJ1ZTtcblxuICB2YXIgX2N1cnJlbnRGcmFtZSA9IDA7XG5cbiAgdmFyIF9zZXBhcmF0b3IgPSBcIlwiLFxuICAgIF9jdXJyZW50RmlsZSA9IFwiXCI7XG5cbiAgdmFyIF9yZWZyZXNoRHVyYXRpb24gPSA5MDAwMDAsICAvLyAxNSBtaW51dGVzXG4gICAgX3JlZnJlc2hJbnRlcnZhbElkID0gbnVsbDtcblxuICB2YXIgX25vRmlsZVRpbWVyID0gbnVsbCxcbiAgICBfbm9GaWxlRmxhZyA9IGZhbHNlO1xuXG4gIC8qXG4gICAqICBQcml2YXRlIE1ldGhvZHNcbiAgICovXG4gIGZ1bmN0aW9uIF9jbGVhck5vRmlsZVRpbWVyKCkge1xuICAgIGNsZWFyVGltZW91dChfbm9GaWxlVGltZXIpO1xuICAgIF9ub0ZpbGVUaW1lciA9IG51bGw7XG4gIH1cblxuICBmdW5jdGlvbiBfZG9uZSgpIHtcbiAgICBnYWRnZXRzLnJwYy5jYWxsKFwiXCIsIFwicnNldmVudF9kb25lXCIsIG51bGwsIF9wcmVmcy5nZXRTdHJpbmcoXCJpZFwiKSk7XG5cbiAgfVxuXG4gIGZ1bmN0aW9uIF9yZWFkeSgpIHtcbiAgICBnYWRnZXRzLnJwYy5jYWxsKFwiXCIsIFwicnNldmVudF9yZWFkeVwiLCBudWxsLCBfcHJlZnMuZ2V0U3RyaW5nKFwiaWRcIiksXG4gICAgICB0cnVlLCB0cnVlLCB0cnVlLCB0cnVlLCB0cnVlKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9yZWZyZXNoSW50ZXJ2YWwoZHVyYXRpb24pIHtcbiAgICBfcmVmcmVzaEludGVydmFsSWQgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiB2aWRlb1JlZnJlc2goKSB7XG4gICAgICAvLyBzZXQgbmV3IHZhbHVlIG9mIG5vbiByaXNlLXN0b3JhZ2UgdXJsIHdpdGggYSBjYWNoZWJ1c3RlclxuICAgICAgX2N1cnJlbnRGaWxlID0gX2FkZGl0aW9uYWxQYXJhbXMudXJsICsgX3NlcGFyYXRvciArIFwiY2I9XCIgKyBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcblxuICAgICAgLy8gaW4gY2FzZSByZWZyZXNoZWQgZmlsZSBmaXhlcyBhbiBlcnJvciB3aXRoIHByZXZpb3VzIGZpbGUsIGVuc3VyZSBmbGFnIGlzIHJlbW92ZWQgc28gcGxheWJhY2sgaXMgYXR0ZW1wdGVkIGFnYWluXG4gICAgICBfcGxheWJhY2tFcnJvciA9IGZhbHNlO1xuXG4gICAgfSwgZHVyYXRpb24pO1xuICB9XG5cbiAgZnVuY3Rpb24gX3N0YXJ0Tm9GaWxlVGltZXIoKSB7XG4gICAgX2NsZWFyTm9GaWxlVGltZXIoKTtcblxuICAgIF9ub0ZpbGVUaW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgLy8gbm90aWZ5IFZpZXdlciB3aWRnZXQgaXMgZG9uZVxuICAgICAgX2RvbmUoKTtcbiAgICB9LCA1MDAwKTtcbiAgfVxuXG4gIC8qXG4gICAqICBQdWJsaWMgTWV0aG9kc1xuICAgKi9cbiAgZnVuY3Rpb24gbm9TdG9yYWdlRmlsZSgpIHtcbiAgICBfbm9GaWxlRmxhZyA9IHRydWU7XG4gICAgX2N1cnJlbnRGaWxlID0gXCJcIjtcblxuICAgIF9tZXNzYWdlLnNob3coXCJUaGUgc2VsZWN0ZWQgdmlkZW8gZG9lcyBub3QgZXhpc3QuXCIpO1xuXG4gICAgX2ZyYW1lQ29udHJvbGxlci5yZW1vdmUoX2N1cnJlbnRGcmFtZSwgZnVuY3Rpb24gKCkge1xuICAgICAgLy8gaWYgV2lkZ2V0IGlzIHBsYXlpbmcgcmlnaHQgbm93LCBydW4gdGhlIHRpbWVyXG4gICAgICBpZiAoIV92aWV3ZXJQYXVzZWQpIHtcbiAgICAgICAgX3N0YXJ0Tm9GaWxlVGltZXIoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIG9uU3RvcmFnZUluaXQodXJsKSB7XG4gICAgX2N1cnJlbnRGaWxlID0gdXJsO1xuXG4gICAgX21lc3NhZ2UuaGlkZSgpO1xuXG4gICAgaWYgKCFfdmlld2VyUGF1c2VkKSB7XG4gICAgICBwbGF5KCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gb25TdG9yYWdlUmVmcmVzaCh1cmwpIHtcbiAgICBfY3VycmVudEZpbGUgPSB1cmw7XG5cbiAgICAvLyBpbiBjYXNlIHJlZnJlc2hlZCBmaWxlIGZpeGVzIGFuIGVycm9yIHdpdGggcHJldmlvdXMgZmlsZSwgZW5zdXJlIGZsYWcgaXMgcmVtb3ZlZCBzbyBwbGF5YmFjayBpcyBhdHRlbXB0ZWQgYWdhaW5cbiAgICBfcGxheWJhY2tFcnJvciA9IGZhbHNlO1xuICB9XG5cbiAgZnVuY3Rpb24gcGF1c2UoKSB7XG4gICAgdmFyIGZyYW1lT2JqID0gX2ZyYW1lQ29udHJvbGxlci5nZXRGcmFtZU9iamVjdChfY3VycmVudEZyYW1lKTtcblxuICAgIF92aWV3ZXJQYXVzZWQgPSB0cnVlO1xuXG4gICAgaWYgKF9ub0ZpbGVGbGFnKSB7XG4gICAgICBfY2xlYXJOb0ZpbGVUaW1lcigpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmIChmcmFtZU9iaikge1xuICAgICAgZnJhbWVPYmoucGF1c2UoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBwbGF5KCkge1xuICAgIHZhciBmcmFtZU9iaiA9IF9mcmFtZUNvbnRyb2xsZXIuZ2V0RnJhbWVPYmplY3QoX2N1cnJlbnRGcmFtZSk7XG5cbiAgICBfdmlld2VyUGF1c2VkID0gZmFsc2U7XG5cbiAgICBpZiAoX25vRmlsZUZsYWcpIHtcbiAgICAgIF9zdGFydE5vRmlsZVRpbWVyKCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKCFfcGxheWJhY2tFcnJvcikge1xuICAgICAgaWYgKGZyYW1lT2JqKSB7XG4gICAgICAgIGZyYW1lT2JqLnBsYXkoKTtcbiAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgaWYgKF9jdXJyZW50RmlsZSAmJiBfY3VycmVudEZpbGUgIT09IFwiXCIpIHtcbiAgICAgICAgICAvLyBhZGQgZnJhbWUgYW5kIGNyZWF0ZSB0aGUgcGxheWVyXG4gICAgICAgICAgX2ZyYW1lQ29udHJvbGxlci5hZGQoMCk7XG4gICAgICAgICAgX2ZyYW1lQ29udHJvbGxlci5jcmVhdGVGcmFtZVBsYXllcigwLCBfYWRkaXRpb25hbFBhcmFtcywgX2N1cnJlbnRGaWxlLCBjb25maWcuU0tJTiwgXCJwbGF5ZXIuaHRtbFwiKTtcbiAgICAgICAgfVxuXG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIFRoaXMgZmxhZyBvbmx5IGdvdCBzZXQgdXBvbiBhIHJlZnJlc2ggb2YgaGlkZGVuIGZyYW1lIGFuZCB0aGVyZSB3YXMgYW4gZXJyb3IgaW4gc2V0dXAgb3IgdmlkZW9cbiAgICAgIC8vIFNlbmQgVmlld2VyIFwiZG9uZVwiXG4gICAgICBfZG9uZSgpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHBsYXllckVuZGVkKCkge1xuICAgIF9mcmFtZUNvbnRyb2xsZXIucmVtb3ZlKF9jdXJyZW50RnJhbWUsIGZ1bmN0aW9uICgpIHtcbiAgICAgIF9kb25lKCk7XG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiBwbGF5ZXJSZWFkeSgpIHtcbiAgICB2YXIgZnJhbWVPYmo7XG5cbiAgICAvLyBub24tc3RvcmFnZSwgY2hlY2sgaWYgcmVmcmVzaCBpbnRlcnZhbCBleGlzdHMgeWV0LCBzdGFydCBpdCBpZiBub3RcbiAgICBpZiAoIV9pc1N0b3JhZ2VGaWxlICYmIF9yZWZyZXNoSW50ZXJ2YWxJZCA9PT0gbnVsbCkge1xuICAgICAgX3JlZnJlc2hJbnRlcnZhbChfcmVmcmVzaER1cmF0aW9uKTtcbiAgICB9XG5cbiAgICBpZiAoIV92aWV3ZXJQYXVzZWQpIHtcbiAgICAgIGZyYW1lT2JqID0gX2ZyYW1lQ29udHJvbGxlci5nZXRGcmFtZU9iamVjdChfY3VycmVudEZyYW1lKTtcbiAgICAgIGZyYW1lT2JqLnBsYXkoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBzZXRBZGRpdGlvbmFsUGFyYW1zKG5hbWVzLCB2YWx1ZXMpIHtcbiAgICB2YXIgc3RyO1xuXG4gICAgaWYgKEFycmF5LmlzQXJyYXkobmFtZXMpICYmIG5hbWVzLmxlbmd0aCA+IDAgJiYgbmFtZXNbMF0gPT09IFwiYWRkaXRpb25hbFBhcmFtc1wiKSB7XG4gICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZXMpICYmIHZhbHVlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgIF9hZGRpdGlvbmFsUGFyYW1zID0gSlNPTi5wYXJzZSh2YWx1ZXNbMF0pO1xuICAgICAgICBfcHJlZnMgPSBuZXcgZ2FkZ2V0cy5QcmVmcygpO1xuXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidmlkZW9Db250YWluZXJcIikuc3R5bGUuaGVpZ2h0ID0gX3ByZWZzLmdldEludChcInJzSFwiKSArIFwicHhcIjtcblxuICAgICAgICBfYWRkaXRpb25hbFBhcmFtcy53aWR0aCA9IF9wcmVmcy5nZXRJbnQoXCJyc1dcIik7XG4gICAgICAgIF9hZGRpdGlvbmFsUGFyYW1zLmhlaWdodCA9IF9wcmVmcy5nZXRJbnQoXCJyc0hcIik7XG5cbiAgICAgICAgX2ZyYW1lQ29udHJvbGxlciA9IG5ldyBSaXNlVmlzaW9uLkNvbW1vbi5WaWRlby5GcmFtZUNvbnRyb2xsZXIoKTtcblxuICAgICAgICBfaXNTdG9yYWdlRmlsZSA9IGZhbHNlO1xuXG4gICAgICAgIHN0ciA9IF9hZGRpdGlvbmFsUGFyYW1zLnVybC5zcGxpdChcIj9cIik7XG5cbiAgICAgICAgLy8gc3RvcmUgdGhpcyBmb3IgdGhlIHJlZnJlc2ggdGltZXJcbiAgICAgICAgX3NlcGFyYXRvciA9IChzdHIubGVuZ3RoID09PSAxKSA/IFwiP1wiIDogXCImXCI7XG4gICAgICAgIF9jdXJyZW50RmlsZSA9IF9hZGRpdGlvbmFsUGFyYW1zLnVybDtcblxuICAgICAgICBsb2FkVmlkZW9MaW5rRnJvbVhMU3VpdGUoZnVuY3Rpb24gKHZpZGVvVXJsKSB7XG4gICAgICAgICAgX2N1cnJlbnRGaWxlID0gdmlkZW9Vcmw7XG4gICAgICAgICAgX3JlYWR5KCk7XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHBsYXllckVycm9yKGVycm9yKSB7XG4gICAgY29uc29sZS5kZWJ1ZyhcInZpZGVvLWZvbGRlcjo6cGxheWVyRXJyb3IoKVwiLCBlcnJvcik7XG5cbiAgICAvLyBmbGFnIHRoZSB2aWRlbyBoYXMgYW4gZXJyb3JcbiAgICBfcGxheWJhY2tFcnJvciA9IHRydWU7XG5cbiAgICAvLyBhY3QgYXMgdGhvdWdoIHZpZGVvIGhhcyBlbmRlZFxuICAgIHBsYXllckVuZGVkKCk7XG4gIH1cblxuICBmdW5jdGlvbiBzdG9wKCkge1xuICAgIHBhdXNlKCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIFwibm9TdG9yYWdlRmlsZVwiOiBub1N0b3JhZ2VGaWxlLFxuICAgIFwib25TdG9yYWdlSW5pdFwiOiBvblN0b3JhZ2VJbml0LFxuICAgIFwib25TdG9yYWdlUmVmcmVzaFwiOiBvblN0b3JhZ2VSZWZyZXNoLFxuICAgIFwicGF1c2VcIjogcGF1c2UsXG4gICAgXCJwbGF5XCI6IHBsYXksXG4gICAgXCJzZXRBZGRpdGlvbmFsUGFyYW1zXCI6IHNldEFkZGl0aW9uYWxQYXJhbXMsXG4gICAgXCJwbGF5ZXJFbmRlZFwiOiBwbGF5ZXJFbmRlZCxcbiAgICBcInBsYXllclJlYWR5XCI6IHBsYXllclJlYWR5LFxuICAgIFwicGxheWVyRXJyb3JcIjogcGxheWVyRXJyb3IsXG4gICAgXCJzdG9wXCI6IHN0b3BcbiAgfTtcblxufSkoZ2FkZ2V0cyk7XG5cclxuLyogZ2xvYmFsIGNvbmZpZyAqL1xuXG52YXIgUmlzZVZpc2lvbiA9IFJpc2VWaXNpb24gfHwge307XG5SaXNlVmlzaW9uLlZpZGVvID0gUmlzZVZpc2lvbi5WaWRlbyB8fCB7fTtcblxuUmlzZVZpc2lvbi5WaWRlby5TdG9yYWdlID0gZnVuY3Rpb24gKGRhdGEpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgdmFyIF9pbml0aWFsTG9hZCA9IHRydWU7XG5cbiAgLypcbiAgICogIFB1YmxpYyBNZXRob2RzXG4gICAqL1xuICBmdW5jdGlvbiBpbml0KCkge1xuICAgIHZhciBzdG9yYWdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ2aWRlb1N0b3JhZ2VcIik7XG5cbiAgICBpZiAoIXN0b3JhZ2UpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBzdG9yYWdlLmFkZEV2ZW50TGlzdGVuZXIoXCJyaXNlLXN0b3JhZ2UtcmVzcG9uc2VcIiwgZnVuY3Rpb24oZSkge1xuICAgICAgaWYgKGUuZGV0YWlsICYmIGUuZGV0YWlsLnVybCkge1xuXG4gICAgICAgIGlmIChfaW5pdGlhbExvYWQpIHtcbiAgICAgICAgICBfaW5pdGlhbExvYWQgPSBmYWxzZTtcblxuICAgICAgICAgIFJpc2VWaXNpb24uVmlkZW8ub25TdG9yYWdlSW5pdChlLmRldGFpbC51cmwpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIC8vIGNoZWNrIGZvciBcImNoYW5nZWRcIiBwcm9wZXJ0eSBhbmQgZW5zdXJlIGl0IGlzIHRydWVcbiAgICAgICAgICBpZiAoZS5kZXRhaWwuaGFzT3duUHJvcGVydHkoXCJjaGFuZ2VkXCIpICYmIGUuZGV0YWlsLmNoYW5nZWQpIHtcbiAgICAgICAgICAgIFJpc2VWaXNpb24uVmlkZW8ub25TdG9yYWdlUmVmcmVzaChlLmRldGFpbC51cmwpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0pO1xuXG4gICAgc3RvcmFnZS5hZGRFdmVudExpc3RlbmVyKFwicmlzZS1zdG9yYWdlLW5vLWZpbGVcIiwgZnVuY3Rpb24oKSB7XG4gICAgICBSaXNlVmlzaW9uLlZpZGVvLm5vU3RvcmFnZUZpbGUoKTtcbiAgICB9KTtcblxuICAgIHN0b3JhZ2Uuc2V0QXR0cmlidXRlKFwiZm9sZGVyXCIsIGRhdGEuc3RvcmFnZS5mb2xkZXIpO1xuICAgIHN0b3JhZ2Uuc2V0QXR0cmlidXRlKFwiZmlsZU5hbWVcIiwgZGF0YS5zdG9yYWdlLmZpbGVOYW1lKTtcbiAgICBzdG9yYWdlLnNldEF0dHJpYnV0ZShcImNvbXBhbnlJZFwiLCBkYXRhLnN0b3JhZ2UuY29tcGFueUlkKTtcbiAgICBzdG9yYWdlLnNldEF0dHJpYnV0ZShcImVudlwiLCBjb25maWcuU1RPUkFHRV9FTlYpO1xuICAgIHN0b3JhZ2UuZ28oKTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgXCJpbml0XCI6IGluaXRcbiAgfTtcbn07XG5cclxudmFyIFJpc2VWaXNpb24gPSBSaXNlVmlzaW9uIHx8IHt9O1xyXG5SaXNlVmlzaW9uLkNvbW1vbiA9IFJpc2VWaXNpb24uQ29tbW9uIHx8IHt9O1xyXG5cclxuUmlzZVZpc2lvbi5Db21tb24uVmlkZW8gPSBSaXNlVmlzaW9uLkNvbW1vbi5WaWRlbyB8fCB7fTtcclxuXHJcblJpc2VWaXNpb24uQ29tbW9uLlZpZGVvLkZyYW1lQ29udHJvbGxlciA9IGZ1bmN0aW9uICgpIHtcclxuICBcInVzZSBzdHJpY3RcIjtcclxuXHJcbiAgdmFyIFBSRUZJWCA9IFwiaWZfXCI7XHJcblxyXG4gIGZ1bmN0aW9uIGdldEZyYW1lQ29udGFpbmVyKGluZGV4KSB7XHJcbiAgICByZXR1cm4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoUFJFRklYICsgaW5kZXgpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gZ2V0RnJhbWVPYmplY3QoaW5kZXgpIHtcclxuICAgIHZhciBmcmFtZUNvbnRhaW5lciA9IGdldEZyYW1lQ29udGFpbmVyKGluZGV4KSxcclxuICAgICAgaWZyYW1lO1xyXG5cclxuICAgIGlmcmFtZSA9IGZyYW1lQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoXCJpZnJhbWVcIik7XHJcblxyXG4gICAgaWYgKGlmcmFtZSkge1xyXG4gICAgICByZXR1cm4gKGlmcmFtZS5jb250ZW50V2luZG93KSA/IGlmcmFtZS5jb250ZW50V2luZG93IDpcclxuICAgICAgICAoaWZyYW1lLmNvbnRlbnREb2N1bWVudC5kb2N1bWVudCkgPyBpZnJhbWUuY29udGVudERvY3VtZW50LmRvY3VtZW50IDogaWZyYW1lLmNvbnRlbnREb2N1bWVudDtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIF9jbGVhcihpbmRleCkge1xyXG4gICAgdmFyIGZyYW1lQ29udGFpbmVyID0gZ2V0RnJhbWVDb250YWluZXIoaW5kZXgpLFxyXG4gICAgICBmcmFtZU9iaiA9IGdldEZyYW1lT2JqZWN0KGluZGV4KSxcclxuICAgICAgaWZyYW1lO1xyXG5cclxuICAgIGlmIChmcmFtZU9iaikge1xyXG4gICAgICBpZnJhbWUgPSBmcmFtZUNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKFwiaWZyYW1lXCIpO1xyXG4gICAgICBmcmFtZU9iai5yZW1vdmUoKTtcclxuICAgICAgaWZyYW1lLnNldEF0dHJpYnV0ZShcInNyY1wiLCBcImFib3V0OmJsYW5rXCIpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gYWRkKGluZGV4KSB7XHJcbiAgICB2YXIgZnJhbWVDb250YWluZXIgPSBnZXRGcmFtZUNvbnRhaW5lcihpbmRleCksXHJcbiAgICAgIGlmcmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpZnJhbWVcIik7XHJcblxyXG4gICAgaWZyYW1lLnNldEF0dHJpYnV0ZShcImFsbG93VHJhbnNwYXJlbmN5XCIsIHRydWUpO1xyXG4gICAgaWZyYW1lLnNldEF0dHJpYnV0ZShcImZyYW1lYm9yZGVyXCIsIFwiMFwiKTtcclxuICAgIGlmcmFtZS5zZXRBdHRyaWJ1dGUoXCJzY3JvbGxpbmdcIiwgXCJub1wiKTtcclxuXHJcbiAgICBmcmFtZUNvbnRhaW5lci5hcHBlbmRDaGlsZChpZnJhbWUpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gY3JlYXRlRnJhbWVQbGF5ZXIoaW5kZXgsIHBhcmFtcywgZmlsZXMsIHNraW4sIHNyYykge1xyXG4gICAgdmFyIGZyYW1lQ29udGFpbmVyID0gZ2V0RnJhbWVDb250YWluZXIoaW5kZXgpLFxyXG4gICAgICBmcmFtZU9iaiA9IGdldEZyYW1lT2JqZWN0KGluZGV4KSxcclxuICAgICAgaWZyYW1lO1xyXG5cclxuICAgIGlmIChmcmFtZU9iaikge1xyXG4gICAgICBpZnJhbWUgPSBmcmFtZUNvbnRhaW5lci5xdWVyeVNlbGVjdG9yKFwiaWZyYW1lXCIpO1xyXG5cclxuICAgICAgaWZyYW1lLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZnJhbWUub25sb2FkID0gbnVsbDtcclxuXHJcbiAgICAgICAgLy8gaW5pdGlhbGl6ZSBhbmQgbG9hZCB0aGUgcGxheWVyIGluc2lkZSB0aGUgaWZyYW1lXHJcbiAgICAgICAgZnJhbWVPYmouaW5pdChwYXJhbXMsIGZpbGVzLCBza2luKTtcclxuICAgICAgICBmcmFtZU9iai5sb2FkKCk7XHJcbiAgICAgIH07XHJcblxyXG4gICAgICBpZnJhbWUuc2V0QXR0cmlidXRlKFwic3JjXCIsIHNyYyk7XHJcbiAgICB9XHJcblxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gaGlkZShpbmRleCkge1xyXG4gICAgdmFyIGZyYW1lQ29udGFpbmVyID0gZ2V0RnJhbWVDb250YWluZXIoaW5kZXgpO1xyXG5cclxuICAgIGZyYW1lQ29udGFpbmVyLnN0eWxlLnZpc2liaWxpdHkgPSBcImhpZGRlblwiO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gcmVtb3ZlKGluZGV4LCBjYWxsYmFjaykge1xyXG4gICAgdmFyIGZyYW1lQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoUFJFRklYICsgaW5kZXgpO1xyXG5cclxuICAgIF9jbGVhcihpbmRleCk7XHJcblxyXG4gICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcbiAgICAgIC8vIHJlbW92ZSB0aGUgaWZyYW1lIGJ5IGNsZWFyaW5nIGFsbCBlbGVtZW50cyBpbnNpZGUgZGl2IGNvbnRhaW5lclxyXG4gICAgICB3aGlsZSAoZnJhbWVDb250YWluZXIuZmlyc3RDaGlsZCkge1xyXG4gICAgICAgIGZyYW1lQ29udGFpbmVyLnJlbW92ZUNoaWxkKGZyYW1lQ29udGFpbmVyLmZpcnN0Q2hpbGQpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoY2FsbGJhY2sgJiYgdHlwZW9mIGNhbGxiYWNrID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICBjYWxsYmFjaygpO1xyXG4gICAgICB9XHJcbiAgICB9LCAyMDApO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gc2hvdyhpbmRleCkge1xyXG4gICAgdmFyIGZyYW1lQ29udGFpbmVyID0gZ2V0RnJhbWVDb250YWluZXIoaW5kZXgpO1xyXG5cclxuICAgIGZyYW1lQ29udGFpbmVyLnN0eWxlLnZpc2liaWxpdHkgPSBcInZpc2libGVcIjtcclxuICB9XHJcblxyXG4gIHJldHVybiB7XHJcbiAgICBhZGQ6IGFkZCxcclxuICAgIGNyZWF0ZUZyYW1lUGxheWVyOiBjcmVhdGVGcmFtZVBsYXllcixcclxuICAgIGdldEZyYW1lQ29udGFpbmVyOiBnZXRGcmFtZUNvbnRhaW5lcixcclxuICAgIGdldEZyYW1lT2JqZWN0OiBnZXRGcmFtZU9iamVjdCxcclxuICAgIGhpZGU6IGhpZGUsXHJcbiAgICByZW1vdmU6IHJlbW92ZSxcclxuICAgIHNob3c6IHNob3dcclxuICB9O1xyXG59O1xyXG5cclxudmFyIFJpc2VWaXNpb24gPSBSaXNlVmlzaW9uIHx8IHt9O1xyXG5SaXNlVmlzaW9uLkNvbW1vbiA9IFJpc2VWaXNpb24uQ29tbW9uIHx8IHt9O1xyXG5cclxuUmlzZVZpc2lvbi5Db21tb24uTWVzc2FnZSA9IGZ1bmN0aW9uIChtYWluQ29udGFpbmVyLCBtZXNzYWdlQ29udGFpbmVyKSB7XHJcbiAgXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG4gIHZhciBfYWN0aXZlID0gZmFsc2U7XHJcblxyXG4gIGZ1bmN0aW9uIF9pbml0KCkge1xyXG4gICAgdHJ5IHtcclxuICAgICAgbWVzc2FnZUNvbnRhaW5lci5zdHlsZS5oZWlnaHQgPSBtYWluQ29udGFpbmVyLnN0eWxlLmhlaWdodDtcclxuICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgY29uc29sZS53YXJuKFwiQ2FuJ3QgaW5pdGlhbGl6ZSBNZXNzYWdlIC0gXCIsIGUubWVzc2FnZSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKlxyXG4gICAqICBQdWJsaWMgTWV0aG9kc1xyXG4gICAqL1xyXG4gIGZ1bmN0aW9uIGhpZGUoKSB7XHJcbiAgICBpZiAoX2FjdGl2ZSkge1xyXG4gICAgICAvLyBjbGVhciBjb250ZW50IG9mIG1lc3NhZ2UgY29udGFpbmVyXHJcbiAgICAgIHdoaWxlIChtZXNzYWdlQ29udGFpbmVyLmZpcnN0Q2hpbGQpIHtcclxuICAgICAgICBtZXNzYWdlQ29udGFpbmVyLnJlbW92ZUNoaWxkKG1lc3NhZ2VDb250YWluZXIuZmlyc3RDaGlsZCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIGhpZGUgbWVzc2FnZSBjb250YWluZXJcclxuICAgICAgbWVzc2FnZUNvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcblxyXG4gICAgICAvLyBzaG93IG1haW4gY29udGFpbmVyXHJcbiAgICAgIG1haW5Db250YWluZXIuc3R5bGUudmlzaWJpbGl0eSA9IFwidmlzaWJsZVwiO1xyXG5cclxuICAgICAgX2FjdGl2ZSA9IGZhbHNlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gc2hvdyhtZXNzYWdlKSB7XHJcbiAgICB2YXIgZnJhZ21lbnQgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksXHJcbiAgICAgIHA7XHJcblxyXG4gICAgaWYgKCFfYWN0aXZlKSB7XHJcbiAgICAgIC8vIGhpZGUgbWFpbiBjb250YWluZXJcclxuICAgICAgbWFpbkNvbnRhaW5lci5zdHlsZS52aXNpYmlsaXR5ID0gXCJoaWRkZW5cIjtcclxuXHJcbiAgICAgIG1lc3NhZ2VDb250YWluZXIuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcclxuXHJcbiAgICAgIC8vIGNyZWF0ZSBtZXNzYWdlIGVsZW1lbnRcclxuICAgICAgcCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJwXCIpO1xyXG4gICAgICBwLmlubmVySFRNTCA9IG1lc3NhZ2U7XHJcbiAgICAgIHAuc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgXCJtZXNzYWdlXCIpO1xyXG4gICAgICBwLnN0eWxlLmxpbmVIZWlnaHQgPSBtZXNzYWdlQ29udGFpbmVyLnN0eWxlLmhlaWdodDtcclxuXHJcbiAgICAgIGZyYWdtZW50LmFwcGVuZENoaWxkKHApO1xyXG4gICAgICBtZXNzYWdlQ29udGFpbmVyLmFwcGVuZENoaWxkKGZyYWdtZW50KTtcclxuXHJcbiAgICAgIF9hY3RpdmUgPSB0cnVlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgLy8gbWVzc2FnZSBhbHJlYWR5IGJlaW5nIHNob3duLCB1cGRhdGUgbWVzc2FnZSB0ZXh0XHJcbiAgICAgIHAgPSBtZXNzYWdlQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoXCIubWVzc2FnZVwiKTtcclxuICAgICAgcC5pbm5lckhUTUwgPSBtZXNzYWdlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX2luaXQoKTtcclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIFwiaGlkZVwiOiBoaWRlLFxyXG4gICAgXCJzaG93XCI6IHNob3dcclxuICB9O1xyXG59O1xyXG5cclxuLyogZ2xvYmFsIGdhZGdldHMsIFJpc2VWaXNpb24gKi9cblxuKGZ1bmN0aW9uICh3aW5kb3csIGdhZGdldHMpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgdmFyIHByZWZzID0gbmV3IGdhZGdldHMuUHJlZnMoKSxcbiAgICBpZCA9IHByZWZzLmdldFN0cmluZyhcImlkXCIpO1xuXG4gIC8vIERpc2FibGUgY29udGV4dCBtZW51IChyaWdodCBjbGljayBtZW51KVxuICB3aW5kb3cub25jb250ZXh0bWVudSA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH07XG5cbiAgZnVuY3Rpb24gcGxheSgpIHtcbiAgICBSaXNlVmlzaW9uLlZpZGVvLnBsYXkoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBhdXNlKCkge1xuICAgIFJpc2VWaXNpb24uVmlkZW8ucGF1c2UoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHN0b3AoKSB7XG4gICAgUmlzZVZpc2lvbi5WaWRlby5zdG9wKCk7XG4gIH1cblxuICBmdW5jdGlvbiBwb2x5bWVyUmVhZHkoKSB7XG4gICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJXZWJDb21wb25lbnRzUmVhZHlcIiwgcG9seW1lclJlYWR5KTtcblxuICAgIGlmIChpZCAmJiBpZCAhPT0gXCJcIikge1xuICAgICAgZ2FkZ2V0cy5ycGMucmVnaXN0ZXIoXCJyc2NtZF9wbGF5X1wiICsgaWQsIHBsYXkpO1xuICAgICAgZ2FkZ2V0cy5ycGMucmVnaXN0ZXIoXCJyc2NtZF9wYXVzZV9cIiArIGlkLCBwYXVzZSk7XG4gICAgICBnYWRnZXRzLnJwYy5yZWdpc3RlcihcInJzY21kX3N0b3BfXCIgKyBpZCwgc3RvcCk7XG5cbiAgICAgIGdhZGdldHMucnBjLnJlZ2lzdGVyKFwicnNwYXJhbV9zZXRfXCIgKyBpZCwgUmlzZVZpc2lvbi5WaWRlby5zZXRBZGRpdGlvbmFsUGFyYW1zKTtcbiAgICAgIGdhZGdldHMucnBjLmNhbGwoXCJcIiwgXCJyc3BhcmFtX2dldFwiLCBudWxsLCBpZCwgW1wiYWRkaXRpb25hbFBhcmFtc1wiXSk7XG4gICAgfVxuICB9XG5cbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJXZWJDb21wb25lbnRzUmVhZHlcIiwgcG9seW1lclJlYWR5KTtcblxufSkod2luZG93LCBnYWRnZXRzKTtcblxuXG5cclxuLyoganNoaW50IGlnbm9yZTpzdGFydCAqL1xudmFyIF9nYXEgPSBfZ2FxIHx8IFtdO1xuXG5fZ2FxLnB1c2goWydfc2V0QWNjb3VudCcsICdVQS01NzA5MjE1OS0yJ10pO1xuX2dhcS5wdXNoKFsnX3RyYWNrUGFnZXZpZXcnXSk7XG5cbihmdW5jdGlvbigpIHtcbiAgdmFyIGdhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7IGdhLnR5cGUgPSAndGV4dC9qYXZhc2NyaXB0JzsgZ2EuYXN5bmMgPSB0cnVlO1xuICBnYS5zcmMgPSAoJ2h0dHBzOicgPT0gZG9jdW1lbnQubG9jYXRpb24ucHJvdG9jb2wgPyAnaHR0cHM6Ly9zc2wnIDogJ2h0dHA6Ly93d3cnKSArICcuZ29vZ2xlLWFuYWx5dGljcy5jb20vZ2EuanMnO1xuICB2YXIgcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdzY3JpcHQnKVswXTsgcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShnYSwgcyk7XG59KSgpO1xuLyoganNoaW50IGlnbm9yZTplbmQgKi9cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
